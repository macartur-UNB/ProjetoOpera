/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.PaineisDeDeletacao;

import control.Controle_Caracteristica;
import control.Controle_Ficha;
import control.Controle_Habilidade;
import control.Controle_Item;
import control.Controle_Jogo;
import java.io.IOException;
import javax.swing.JOptionPane;
import model.exception.ArquivoInvalidoException;
import model.exception.DeletarInvalidoException;
import model.exception.DiretorioInvalidoException;
import view.PaineisDeCadastro.PainelFuncoes;

/**
 *
 * @author Luciano
 */
public class PnlDeletar extends javax.swing.JPanel {

    private String radioButtonSelecionado;
    
    /**
     * Creates new form PnlDeletar
     */
    public PnlDeletar() {
        initComponents();
        limpar();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpDeletar = new javax.swing.ButtonGroup();
        grpTipoDeFicha = new javax.swing.ButtonGroup();
        grpTipoDeHabilidade = new javax.swing.ButtonGroup();
        grpTipoDeCaracteristica = new javax.swing.ButtonGroup();
        grpTipoDeEquipamento = new javax.swing.ButtonGroup();
        grpTipoDeArma = new javax.swing.ButtonGroup();
        pnlTipoDeletar = new javax.swing.JPanel();
        rdbFicha = new javax.swing.JRadioButton();
        rdbHabilidade = new javax.swing.JRadioButton();
        rdbCaracteristica = new javax.swing.JRadioButton();
        rdbEquipamento = new javax.swing.JRadioButton();
        rdbJogo = new javax.swing.JRadioButton();
        pnlTipoDeFicha = new javax.swing.JPanel();
        rdbFichaJogador = new javax.swing.JRadioButton();
        rdbFichaNPC = new javax.swing.JRadioButton();
        rdbFichaMonstro = new javax.swing.JRadioButton();
        pnlTipoDeHabilidade = new javax.swing.JPanel();
        rdbHabilidadeFisica = new javax.swing.JRadioButton();
        rdbHabilidadePsiquica = new javax.swing.JRadioButton();
        rdbHabilidadeBelica = new javax.swing.JRadioButton();
        pnlTipoDeCaracteristica = new javax.swing.JPanel();
        rdbCaracteristicaFisica = new javax.swing.JRadioButton();
        rdbCaracteristicaPsiquica = new javax.swing.JRadioButton();
        rdbCaracteristicaRacial = new javax.swing.JRadioButton();
        pnlTipoDeEquipamento = new javax.swing.JPanel();
        rdbEquipamentoItem = new javax.swing.JRadioButton();
        rdbEquipamentoArma = new javax.swing.JRadioButton();
        rdbEquipamentoArmadura = new javax.swing.JRadioButton();
        pnlTipoDeArma = new javax.swing.JPanel();
        rdbArmaADistancia = new javax.swing.JRadioButton();
        rdbArmaCorpoACorpo = new javax.swing.JRadioButton();
        pnlSelecionar = new javax.swing.JPanel();
        txtSelecionar = new javax.swing.JLabel();
        cmbSelecionar = new javax.swing.JComboBox();
        btnLimpar = new javax.swing.JButton();
        btnDeletar = new javax.swing.JButton();

        pnlTipoDeletar.setBorder(javax.swing.BorderFactory.createTitledBorder("Escolha o que deseja Deletar"));

        grpDeletar.add(rdbFicha);
        rdbFicha.setText("Ficha");
        rdbFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbFichaActionPerformed(evt);
            }
        });

        grpDeletar.add(rdbHabilidade);
        rdbHabilidade.setText("Habilidade");
        rdbHabilidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbHabilidadeActionPerformed(evt);
            }
        });

        grpDeletar.add(rdbCaracteristica);
        rdbCaracteristica.setText("Caracteristica");
        rdbCaracteristica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbCaracteristicaActionPerformed(evt);
            }
        });

        grpDeletar.add(rdbEquipamento);
        rdbEquipamento.setText("Equipamento");
        rdbEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbEquipamentoActionPerformed(evt);
            }
        });

        grpDeletar.add(rdbJogo);
        rdbJogo.setText("Jogo");
        rdbJogo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbJogoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTipoDeletarLayout = new javax.swing.GroupLayout(pnlTipoDeletar);
        pnlTipoDeletar.setLayout(pnlTipoDeletarLayout);
        pnlTipoDeletarLayout.setHorizontalGroup(
            pnlTipoDeletarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeletarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbFicha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbHabilidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbCaracteristica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbEquipamento)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbJogo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTipoDeletarLayout.setVerticalGroup(
            pnlTipoDeletarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeletarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTipoDeletarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbFicha)
                    .addComponent(rdbHabilidade)
                    .addComponent(rdbCaracteristica)
                    .addComponent(rdbEquipamento)
                    .addComponent(rdbJogo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTipoDeFicha.setBorder(javax.swing.BorderFactory.createTitledBorder("Ficha"));

        grpTipoDeFicha.add(rdbFichaJogador);
        rdbFichaJogador.setText("Jogador");
        rdbFichaJogador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbFichaJogadorActionPerformed(evt);
            }
        });

        grpTipoDeFicha.add(rdbFichaNPC);
        rdbFichaNPC.setText("NPC");
        rdbFichaNPC.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbFichaNPCActionPerformed(evt);
            }
        });

        grpTipoDeFicha.add(rdbFichaMonstro);
        rdbFichaMonstro.setText("Monstro");
        rdbFichaMonstro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbFichaMonstroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTipoDeFichaLayout = new javax.swing.GroupLayout(pnlTipoDeFicha);
        pnlTipoDeFicha.setLayout(pnlTipoDeFichaLayout);
        pnlTipoDeFichaLayout.setHorizontalGroup(
            pnlTipoDeFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbFichaJogador)
                .addGap(18, 18, 18)
                .addComponent(rdbFichaNPC)
                .addGap(18, 18, 18)
                .addComponent(rdbFichaMonstro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTipoDeFichaLayout.setVerticalGroup(
            pnlTipoDeFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTipoDeFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbFichaJogador)
                    .addComponent(rdbFichaNPC)
                    .addComponent(rdbFichaMonstro))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTipoDeHabilidade.setBorder(javax.swing.BorderFactory.createTitledBorder("Habilidade"));

        grpTipoDeHabilidade.add(rdbHabilidadeFisica);
        rdbHabilidadeFisica.setText("Fisica");
        rdbHabilidadeFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbHabilidadeFisicaActionPerformed(evt);
            }
        });

        grpTipoDeHabilidade.add(rdbHabilidadePsiquica);
        rdbHabilidadePsiquica.setText("Psiquica");
        rdbHabilidadePsiquica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbHabilidadePsiquicaActionPerformed(evt);
            }
        });

        grpTipoDeHabilidade.add(rdbHabilidadeBelica);
        rdbHabilidadeBelica.setText("Belica");
        rdbHabilidadeBelica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbHabilidadeBelicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTipoDeHabilidadeLayout = new javax.swing.GroupLayout(pnlTipoDeHabilidade);
        pnlTipoDeHabilidade.setLayout(pnlTipoDeHabilidadeLayout);
        pnlTipoDeHabilidadeLayout.setHorizontalGroup(
            pnlTipoDeHabilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeHabilidadeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbHabilidadeFisica)
                .addGap(18, 18, 18)
                .addComponent(rdbHabilidadePsiquica)
                .addGap(18, 18, 18)
                .addComponent(rdbHabilidadeBelica)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTipoDeHabilidadeLayout.setVerticalGroup(
            pnlTipoDeHabilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeHabilidadeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTipoDeHabilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbHabilidadeFisica)
                    .addComponent(rdbHabilidadePsiquica)
                    .addComponent(rdbHabilidadeBelica))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTipoDeCaracteristica.setBorder(javax.swing.BorderFactory.createTitledBorder("Caracteristica"));

        grpTipoDeCaracteristica.add(rdbCaracteristicaFisica);
        rdbCaracteristicaFisica.setText("Fisica");
        rdbCaracteristicaFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbCaracteristicaFisicaActionPerformed(evt);
            }
        });

        grpTipoDeCaracteristica.add(rdbCaracteristicaPsiquica);
        rdbCaracteristicaPsiquica.setText("Psiquica");
        rdbCaracteristicaPsiquica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbCaracteristicaPsiquicaActionPerformed(evt);
            }
        });

        grpTipoDeCaracteristica.add(rdbCaracteristicaRacial);
        rdbCaracteristicaRacial.setText("Racial");
        rdbCaracteristicaRacial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbCaracteristicaRacialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTipoDeCaracteristicaLayout = new javax.swing.GroupLayout(pnlTipoDeCaracteristica);
        pnlTipoDeCaracteristica.setLayout(pnlTipoDeCaracteristicaLayout);
        pnlTipoDeCaracteristicaLayout.setHorizontalGroup(
            pnlTipoDeCaracteristicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeCaracteristicaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbCaracteristicaFisica)
                .addGap(18, 18, 18)
                .addComponent(rdbCaracteristicaPsiquica)
                .addGap(18, 18, 18)
                .addComponent(rdbCaracteristicaRacial)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTipoDeCaracteristicaLayout.setVerticalGroup(
            pnlTipoDeCaracteristicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeCaracteristicaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTipoDeCaracteristicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbCaracteristicaFisica)
                    .addComponent(rdbCaracteristicaPsiquica)
                    .addComponent(rdbCaracteristicaRacial))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTipoDeEquipamento.setBorder(javax.swing.BorderFactory.createTitledBorder("Equipamento"));

        grpTipoDeEquipamento.add(rdbEquipamentoItem);
        rdbEquipamentoItem.setText("Item");
        rdbEquipamentoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbEquipamentoItemActionPerformed(evt);
            }
        });

        grpTipoDeEquipamento.add(rdbEquipamentoArma);
        rdbEquipamentoArma.setText("Arma");
        rdbEquipamentoArma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbEquipamentoArmaActionPerformed(evt);
            }
        });

        grpTipoDeEquipamento.add(rdbEquipamentoArmadura);
        rdbEquipamentoArmadura.setText("Armadura");
        rdbEquipamentoArmadura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbEquipamentoArmaduraActionPerformed(evt);
            }
        });

        pnlTipoDeArma.setBorder(javax.swing.BorderFactory.createTitledBorder("Arma"));

        grpTipoDeArma.add(rdbArmaADistancia);
        rdbArmaADistancia.setText("Arma a Distancia");
        rdbArmaADistancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbArmaADistanciaActionPerformed(evt);
            }
        });

        grpTipoDeArma.add(rdbArmaCorpoACorpo);
        rdbArmaCorpoACorpo.setText("Arma Corpo a Corpo");
        rdbArmaCorpoACorpo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbArmaCorpoACorpoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTipoDeArmaLayout = new javax.swing.GroupLayout(pnlTipoDeArma);
        pnlTipoDeArma.setLayout(pnlTipoDeArmaLayout);
        pnlTipoDeArmaLayout.setHorizontalGroup(
            pnlTipoDeArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeArmaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTipoDeArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdbArmaADistancia)
                    .addComponent(rdbArmaCorpoACorpo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTipoDeArmaLayout.setVerticalGroup(
            pnlTipoDeArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeArmaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbArmaADistancia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbArmaCorpoACorpo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlTipoDeEquipamentoLayout = new javax.swing.GroupLayout(pnlTipoDeEquipamento);
        pnlTipoDeEquipamento.setLayout(pnlTipoDeEquipamentoLayout);
        pnlTipoDeEquipamentoLayout.setHorizontalGroup(
            pnlTipoDeEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeEquipamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbEquipamentoItem)
                .addGap(18, 18, 18)
                .addComponent(rdbEquipamentoArma)
                .addGap(18, 18, 18)
                .addComponent(rdbEquipamentoArmadura)
                .addGap(18, 18, 18)
                .addComponent(pnlTipoDeArma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTipoDeEquipamentoLayout.setVerticalGroup(
            pnlTipoDeEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeEquipamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTipoDeEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTipoDeEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(rdbEquipamentoItem)
                        .addComponent(rdbEquipamentoArma)
                        .addComponent(rdbEquipamentoArmadura))
                    .addComponent(pnlTipoDeArma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSelecionar.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione"));

        txtSelecionar.setText("Selecionar:");

        cmbSelecionar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelecionarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSelecionarLayout = new javax.swing.GroupLayout(pnlSelecionar);
        pnlSelecionar.setLayout(pnlSelecionarLayout);
        pnlSelecionarLayout.setHorizontalGroup(
            pnlSelecionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSelecionar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbSelecionar, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlSelecionarLayout.setVerticalGroup(
            pnlSelecionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSelecionarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSelecionar)
                    .addComponent(cmbSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnDeletar.setText("Deletar");
        btnDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDeletar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnLimpar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(pnlTipoDeFicha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlTipoDeHabilidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlTipoDeCaracteristica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlTipoDeEquipamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlSelecionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(pnlTipoDeletar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlTipoDeletar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTipoDeFicha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTipoDeHabilidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTipoDeCaracteristica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlTipoDeEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpar)
                    .addComponent(btnDeletar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rdbFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbFichaActionPerformed
        // TODO add your handling code here:
        limpar();
        PainelFuncoes.habilitarCampos(pnlTipoDeFicha, true);
        
        txtSelecionar.setText("Selecionar:");
    }//GEN-LAST:event_rdbFichaActionPerformed

    private void rdbHabilidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbHabilidadeActionPerformed
        // TODO add your handling code here:
        limpar();
        PainelFuncoes.habilitarCampos(pnlTipoDeHabilidade, true);
        
        txtSelecionar.setText("Selecionar:");
    }//GEN-LAST:event_rdbHabilidadeActionPerformed

    private void rdbCaracteristicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbCaracteristicaActionPerformed
        // TODO add your handling code here:
        limpar();
        PainelFuncoes.habilitarCampos(pnlTipoDeCaracteristica, true);
        
        txtSelecionar.setText("Selecionar:");
    }//GEN-LAST:event_rdbCaracteristicaActionPerformed

    private void rdbEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbEquipamentoActionPerformed
        // TODO add your handling code here:
        limpar();
        PainelFuncoes.habilitarCampos(pnlTipoDeEquipamento, true);
        
        txtSelecionar.setText("Selecionar:");
    }//GEN-LAST:event_rdbEquipamentoActionPerformed
    
    
    private void rdbFichaJogadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbFichaJogadorActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        
        txtSelecionar.setText("Jogador:");
        carregarJComboBox("Jogador");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Jogador";
    }//GEN-LAST:event_rdbFichaJogadorActionPerformed

    private void rdbFichaNPCActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbFichaNPCActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        
        txtSelecionar.setText("NPC:");
        carregarJComboBox("NPC");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "NPC";
    }//GEN-LAST:event_rdbFichaNPCActionPerformed

    private void rdbFichaMonstroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbFichaMonstroActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        
        txtSelecionar.setText("Monstro:");
        carregarJComboBox("Monstro");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Monstro";
    }//GEN-LAST:event_rdbFichaMonstroActionPerformed

    private void rdbJogoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbJogoActionPerformed
        // TODO add your handling code here:
        limpar();
        
        txtSelecionar.setText("Jogo");
        carregarJComboBox("Jogo");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Jogo";
    }//GEN-LAST:event_rdbJogoActionPerformed

    private void rdbHabilidadeFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbHabilidadeFisicaActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        
        txtSelecionar.setText("Habilidade Fisica:");
        carregarJComboBox("Habilidade Fisica");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Habilidade Fisica";
    }//GEN-LAST:event_rdbHabilidadeFisicaActionPerformed

    private void rdbHabilidadePsiquicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbHabilidadePsiquicaActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        
        txtSelecionar.setText("Habilidade Psiquica:");
        carregarJComboBox("Habilidade Psiquica");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Habilidade Psiquica";
    }//GEN-LAST:event_rdbHabilidadePsiquicaActionPerformed

    private void rdbHabilidadeBelicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbHabilidadeBelicaActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        
        txtSelecionar.setText("Habilidade Belica:");
        carregarJComboBox("Habilidade Belica");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Habilidade Belica";
    }//GEN-LAST:event_rdbHabilidadeBelicaActionPerformed

    private void rdbCaracteristicaFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbCaracteristicaFisicaActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        
        txtSelecionar.setText("Caracteristica Fisica:");
        carregarJComboBox("Caracteristica Fisica");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Caracteristica Fisica";
    }//GEN-LAST:event_rdbCaracteristicaFisicaActionPerformed

    private void rdbCaracteristicaPsiquicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbCaracteristicaPsiquicaActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        
        txtSelecionar.setText("Caracteristica Psiquica:");
        carregarJComboBox("Caracteristica Psiquica");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Caracteristica Psiquica";
    }//GEN-LAST:event_rdbCaracteristicaPsiquicaActionPerformed

    private void rdbCaracteristicaRacialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbCaracteristicaRacialActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        
        txtSelecionar.setText("Caracteristica Racial:");
        carregarJComboBox("Caracteristica Racial");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Caracteristica Racial";
    }//GEN-LAST:event_rdbCaracteristicaRacialActionPerformed

    private void rdbEquipamentoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbEquipamentoItemActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        PainelFuncoes.habilitarCampos(pnlTipoDeArma, false);
        grpTipoDeArma.clearSelection();
        
        txtSelecionar.setText("Item:");
        carregarJComboBox("Item");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Item";
    }//GEN-LAST:event_rdbEquipamentoItemActionPerformed

    private void rdbEquipamentoArmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbEquipamentoArmaActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, false);
        PainelFuncoes.habilitarCampos(pnlTipoDeArma, true);
        grpTipoDeArma.clearSelection();
        
        txtSelecionar.setText("Selecionar:");
        radioButtonSelecionado = null;
    }//GEN-LAST:event_rdbEquipamentoArmaActionPerformed

    private void rdbEquipamentoArmaduraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbEquipamentoArmaduraActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        PainelFuncoes.habilitarCampos(pnlTipoDeArma, false);
        grpTipoDeArma.clearSelection();
        
        txtSelecionar.setText("Armadura:");
        carregarJComboBox("Armadura");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Armadura";
    }//GEN-LAST:event_rdbEquipamentoArmaduraActionPerformed

    private void rdbArmaADistanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbArmaADistanciaActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        
        txtSelecionar.setText("Arma Distancia:");
        carregarJComboBox("Arma Distancia");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Arma Distancia";
    }//GEN-LAST:event_rdbArmaADistanciaActionPerformed

    private void rdbArmaCorpoACorpoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbArmaCorpoACorpoActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        
        txtSelecionar.setText("Arma Corpo:");
        carregarJComboBox("Arma Corpo");
        PainelFuncoes.habilitarCampos(pnlSelecionar, true);
        radioButtonSelecionado = "Arma Corpo";
    }//GEN-LAST:event_rdbArmaCorpoACorpoActionPerformed

    private void cmbSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelecionarActionPerformed
        // TODO add your handling code here:
        if(!cmbSelecionar.getSelectedItem().toString().equals("Nenhum(a)")){
            btnDeletar.setEnabled(true);
        }else{
            btnDeletar.setEnabled(false);
        }
    }//GEN-LAST:event_cmbSelecionarActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        limpar();
        grpDeletar.clearSelection();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletarActionPerformed
        // TODO add your handling code here:
        deletar();
    }//GEN-LAST:event_btnDeletarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDeletar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JComboBox cmbSelecionar;
    private javax.swing.ButtonGroup grpDeletar;
    private javax.swing.ButtonGroup grpTipoDeArma;
    private javax.swing.ButtonGroup grpTipoDeCaracteristica;
    private javax.swing.ButtonGroup grpTipoDeEquipamento;
    private javax.swing.ButtonGroup grpTipoDeFicha;
    private javax.swing.ButtonGroup grpTipoDeHabilidade;
    private javax.swing.JPanel pnlSelecionar;
    private javax.swing.JPanel pnlTipoDeArma;
    private javax.swing.JPanel pnlTipoDeCaracteristica;
    private javax.swing.JPanel pnlTipoDeEquipamento;
    private javax.swing.JPanel pnlTipoDeFicha;
    private javax.swing.JPanel pnlTipoDeHabilidade;
    private javax.swing.JPanel pnlTipoDeletar;
    private javax.swing.JRadioButton rdbArmaADistancia;
    private javax.swing.JRadioButton rdbArmaCorpoACorpo;
    private javax.swing.JRadioButton rdbCaracteristica;
    private javax.swing.JRadioButton rdbCaracteristicaFisica;
    private javax.swing.JRadioButton rdbCaracteristicaPsiquica;
    private javax.swing.JRadioButton rdbCaracteristicaRacial;
    private javax.swing.JRadioButton rdbEquipamento;
    private javax.swing.JRadioButton rdbEquipamentoArma;
    private javax.swing.JRadioButton rdbEquipamentoArmadura;
    private javax.swing.JRadioButton rdbEquipamentoItem;
    private javax.swing.JRadioButton rdbFicha;
    private javax.swing.JRadioButton rdbFichaJogador;
    private javax.swing.JRadioButton rdbFichaMonstro;
    private javax.swing.JRadioButton rdbFichaNPC;
    private javax.swing.JRadioButton rdbHabilidade;
    private javax.swing.JRadioButton rdbHabilidadeBelica;
    private javax.swing.JRadioButton rdbHabilidadeFisica;
    private javax.swing.JRadioButton rdbHabilidadePsiquica;
    private javax.swing.JRadioButton rdbJogo;
    private javax.swing.JLabel txtSelecionar;
    // End of variables declaration//GEN-END:variables


    private void limpar(){
        
        btnDeletar.setEnabled(false);
        
        PainelFuncoes.habilitarCampos(this, false);
        PainelFuncoes.habilitarCampos(pnlTipoDeletar, true);
        
        cmbSelecionar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nenhum(a)"}));
        
        radioButtonSelecionado = null;
        
        grpTipoDeArma.clearSelection();
        grpTipoDeCaracteristica.clearSelection();
        grpTipoDeEquipamento.clearSelection();
        grpTipoDeFicha.clearSelection();
        grpTipoDeHabilidade.clearSelection();
    }
    
    private void carregarJComboBox(String carregar){
        cmbSelecionar.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nenhum(a)"}));
        
        String lista[] = null;
        
        if(carregar.equals("Jogo"))
            lista = Controle_Jogo.jogosExistentes();
        
        if(carregar.equals("Jogador"))
            lista = Controle_Ficha.listarFichasJogador();
        if(carregar.equals("NPC"))
            lista = Controle_Ficha.listarFichasNPC();
        if(carregar.equals("Monstro"))
            lista = Controle_Ficha.listarFichasMonstro();
        
        if(carregar.equals("Habilidade Fisica"))
            lista = Controle_Habilidade.listarHabilidadeFisicas();
        if(carregar.equals("Habilidade Psiquica"))
            lista = Controle_Habilidade.listarHabilidadesPsiquicas();
        if(carregar.equals("Habilidade Belica"))
            lista = Controle_Habilidade.listarHabilidadesBelicas();
        
        if(carregar.equals("Caracteristica Fisica"))
            lista = Controle_Caracteristica.listarCaracteristicasFisicas();
        if(carregar.equals("Caracteristica Psiquica"))
            lista = Controle_Caracteristica.listarCaracteristicasPsiquicas();
        if(carregar.equals("Caracteristica Racial"))
            lista = Controle_Caracteristica.listarCaracteristicasRaciais();
        
        if(carregar.equals("Item"))
            lista = Controle_Item.listarItemGenerico();
        if(carregar.equals("Armadura"))
            lista = Controle_Item.listarItemArmadura();
        if(carregar.equals("Arma Distancia"))
            lista = Controle_Item.listarItemArmaADistancia();
        if(carregar.equals("Arma Corpo"))
            lista = Controle_Item.listarItemArmaCorpoACorpo();

        if(lista != null){
            if(lista.length > 0){
                for(int i = 0; i < lista.length; i++){
                    cmbSelecionar.addItem(lista[i]);
                }
            }
        }
        
    }
    
    private void deletar(){
        try{
            String itemSelecionado = cmbSelecionar.getSelectedItem().toString();
            boolean erro = false;
            if(radioButtonSelecionado.equals("Jogo")){
                if(!itemSelecionado.equals(Controle_Jogo.jogoRodando())){
                    Controle_Jogo.apagarJogo(itemSelecionado);
                }
                else{
                    JOptionPane.showMessageDialog(null,"ERROR: " + "Esse Jogo esta em Andamento.","Erro",JOptionPane.ERROR_MESSAGE);
                    erro = true;
                }
            }

            if(radioButtonSelecionado.equals("Jogador"))
                Controle_Ficha.removerJogador(itemSelecionado);
            if(radioButtonSelecionado.equals("NPC"))
                Controle_Ficha.removerNPC(itemSelecionado);
            if(radioButtonSelecionado.equals("Monstro"))
                Controle_Ficha.removerMonstro(itemSelecionado);

            if(radioButtonSelecionado.equals("Habilidade Fisica"))
                Controle_Habilidade.removeHabilidadeFisica(itemSelecionado);
            if(radioButtonSelecionado.equals("Habilidade Psiquica"))
                Controle_Habilidade.removeHabilidadePsiquica(itemSelecionado);
            if(radioButtonSelecionado.equals("Habilidade Belica"))
                Controle_Habilidade.removeHabilidadeBelica(itemSelecionado);

            if(radioButtonSelecionado.equals("Caracteristica Fisica"))
                Controle_Caracteristica.removeCaracteristicaFisica(itemSelecionado);
            if(radioButtonSelecionado.equals("Caracteristica Psiquica"))
                Controle_Caracteristica.removeCaracteristicaPsiquica(itemSelecionado);
            if(radioButtonSelecionado.equals("Caracteristica Racial"))
                Controle_Caracteristica.removeCaracteristicaRacial(itemSelecionado);

            if(radioButtonSelecionado.equals("Item"))
                Controle_Item.removerItemGenerico(itemSelecionado);
            if(radioButtonSelecionado.equals("Armadura"))
                Controle_Item.removerArmadura(itemSelecionado);
            if(radioButtonSelecionado.equals("Arma Distancia"))
                Controle_Item.removerArmaADistancia(itemSelecionado);
            if(radioButtonSelecionado.equals("Arma Corpo"))
                Controle_Item.removerArmaCorpoACorpo(itemSelecionado);
            
            if(!erro)
                JOptionPane.showMessageDialog(null,"Deletar: " + itemSelecionado +"\nRealizado com Sucesso!","Concluido",JOptionPane.INFORMATION_MESSAGE);
            limpar();
            grpDeletar.clearSelection();
        } catch(ArquivoInvalidoException | DeletarInvalidoException | DiretorioInvalidoException | IOException e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),"Erro",JOptionPane.ERROR_MESSAGE);
        }
    }
}
