/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.PaineisDeCadastro;

import control.Controle_Habilidade;
import model.exception.ArquivoInvalidoException;
import model.exception.JTextFieldInvalidoException;
import java.awt.Color;
import java.io.IOException;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import view.validacao.ValidarCampos;

/**
 *
 * @author Luciano
 */
public class PnlCadastrarHabilidade extends javax.swing.JPanel {

    private boolean podeCadastrar;
    
    /**
     * Creates new form PnlCadastrarHabilidade
     */
    public PnlCadastrarHabilidade() {
        initComponents();
        PainelFuncoes.definirCorDaBordaJTextField(this, Color.GRAY);
        podeCadastrar = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpTipoHabilidade = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtCusto = new javax.swing.JTextField();
        pnlTipo = new javax.swing.JPanel();
        rdbFisica = new javax.swing.JRadioButton();
        rdbPsiquica = new javax.swing.JRadioButton();
        rdbBelica = new javax.swing.JRadioButton();
        jPanel4 = new javax.swing.JPanel();
        txtTeste = new javax.swing.JTextField();
        btnCadastrar = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Habilidade"));

        jLabel3.setText("Nome:");

        txtNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNomeActionPerformed(evt);
            }
        });
        txtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomeFocusLost(evt);
            }
        });

        jLabel4.setText("Custo:");

        txtCusto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCustoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNome, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCusto, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(txtCusto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTipo.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo"));

        grpTipoHabilidade.add(rdbFisica);
        rdbFisica.setText("Fisica");
        rdbFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbFisicaActionPerformed(evt);
            }
        });

        grpTipoHabilidade.add(rdbPsiquica);
        rdbPsiquica.setText("Psiquica");
        rdbPsiquica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbPsiquicaActionPerformed(evt);
            }
        });

        grpTipoHabilidade.add(rdbBelica);
        rdbBelica.setText("Belica");
        rdbBelica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbBelicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTipoLayout = new javax.swing.GroupLayout(pnlTipo);
        pnlTipo.setLayout(pnlTipoLayout);
        pnlTipoLayout.setHorizontalGroup(
            pnlTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbFisica)
                .addGap(18, 18, 18)
                .addComponent(rdbPsiquica)
                .addGap(18, 18, 18)
                .addComponent(rdbBelica)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTipoLayout.setVerticalGroup(
            pnlTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbFisica)
                    .addComponent(rdbPsiquica)
                    .addComponent(rdbBelica))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Teste"));

        txtTeste.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTesteFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtTeste)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(txtTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 17, Short.MAX_VALUE))
        );

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimpar))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                            .addComponent(pnlTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnLimpar)
                    .addComponent(btnCadastrar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNomeActionPerformed

    private void txtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusLost
        // TODO add your handling code here:
        try {
            ValidarCampos.validarCampoTexto((JTextField) evt.getSource(), true);
        } catch (JTextFieldInvalidoException e) {
        }
    }//GEN-LAST:event_txtNomeFocusLost

    private void txtCustoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCustoFocusLost
        // TODO add your handling code here:
        try {
            ValidarCampos.validarCampoInteiro((JTextField) evt.getSource());
        } catch (JTextFieldInvalidoException e) {
        }
    }//GEN-LAST:event_txtCustoFocusLost

    private void txtTesteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTesteFocusLost
        // TODO add your handling code here:
        try {
            ValidarCampos.validarCampoInteiro((JTextField) evt.getSource());
        } catch (JTextFieldInvalidoException e) {
        }
    }//GEN-LAST:event_txtTesteFocusLost

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.limparTodosOsCampos(this);
        PainelFuncoes.definirCorDaBordaJTextField(this, Color.GRAY);
        grpTipoHabilidade.clearSelection();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // TODO add your handling code here:
        if(podeCadastrar){
            cadastrarHabilidade();
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void rdbFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbFisicaActionPerformed
        // TODO add your handling code here:
        rdbFisica.setForeground(Color.BLACK);
        rdbPsiquica.setForeground(Color.BLACK);
        rdbBelica.setForeground(Color.BLACK);

        rdbFisica.setToolTipText("");
        rdbPsiquica.setToolTipText("");
        rdbBelica.setToolTipText("");
    }//GEN-LAST:event_rdbFisicaActionPerformed

    private void rdbPsiquicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbPsiquicaActionPerformed
        // TODO add your handling code here:
        rdbFisica.setForeground(Color.BLACK);
        rdbPsiquica.setForeground(Color.BLACK);
        rdbBelica.setForeground(Color.BLACK);

        rdbFisica.setToolTipText("");
        rdbPsiquica.setToolTipText("");
        rdbBelica.setToolTipText("");
    }//GEN-LAST:event_rdbPsiquicaActionPerformed

    private void rdbBelicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbBelicaActionPerformed
        // TODO add your handling code here:
        rdbFisica.setForeground(Color.BLACK);
        rdbPsiquica.setForeground(Color.BLACK);
        rdbBelica.setForeground(Color.BLACK);

        rdbFisica.setToolTipText("");
        rdbPsiquica.setToolTipText("");
        rdbBelica.setToolTipText("");
    }//GEN-LAST:event_rdbBelicaActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.ButtonGroup grpTipoHabilidade;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel pnlTipo;
    private javax.swing.JRadioButton rdbBelica;
    private javax.swing.JRadioButton rdbFisica;
    private javax.swing.JRadioButton rdbPsiquica;
    private javax.swing.JTextField txtCusto;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtTeste;
    // End of variables declaration//GEN-END:variables

    
    private void cadastrarHabilidade(){
        try {
            String nome = ValidarCampos.validarCampoTexto(txtNome, true);
            int custo = ValidarCampos.validarCampoInteiro(txtCusto);
            int teste = ValidarCampos.validarCampoInteiro(txtTeste);

            String tipo = null;
            if (rdbBelica.isSelected()) {
                tipo = "Belica";
            }
            if (rdbFisica.isSelected()) {
                tipo = "Fisica";
            }
            if (rdbPsiquica.isSelected()) {
                tipo = "Psiquica";
            }
            if (tipo == null) {
                JOptionPane.showMessageDialog(null, "ERROR: " + "Um TIPO de Habilidade deve ser selecionado", "Erro", JOptionPane.ERROR_MESSAGE);
                rdbFisica.setForeground(Color.RED);
                rdbPsiquica.setForeground(Color.RED);
                rdbBelica.setForeground(Color.RED);

                rdbFisica.setToolTipText("Um TIPO de Habilidade deve ser selecionado");
                rdbPsiquica.setToolTipText("Um TIPO de Habilidade deve ser selecionado");
                rdbBelica.setToolTipText("Um TIPO de Habilidade deve ser selecionado");
            } else {
                Controle_Habilidade.cadHabilidade(teste, 0, custo, nome, tipo);
                JOptionPane.showMessageDialog(null, "Cadastro Habildiade: " + nome + "\nRealizado com Sucesso!", "Concluido", JOptionPane.INFORMATION_MESSAGE);
                PainelFuncoes.limparTodosOsCampos(this);
                PainelFuncoes.definirCorDaBordaJTextField(this, Color.GRAY);
                grpTipoHabilidade.clearSelection();
            }
        } catch (ArquivoInvalidoException | IOException | JTextFieldInvalidoException e) {
            JOptionPane.showMessageDialog(null, "ERROR: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }
    
    
    public JButton getBtnCadastrar() {
        return btnCadastrar;
    }

    public void setBtnCadastrar(JButton btnCadastrar) {
        this.btnCadastrar = btnCadastrar;
    }

    public JButton getBtnLimpar() {
        return btnLimpar;
    }

    public void setBtnLimpar(JButton btnLimpar) {
        this.btnLimpar = btnLimpar;
    }

    public ButtonGroup getGrpTipoHabilidade() {
        return grpTipoHabilidade;
    }

    public void setGrpTipoHabilidade(ButtonGroup grpTipoHabilidade) {
        this.grpTipoHabilidade = grpTipoHabilidade;
    }

    public JRadioButton getRdbBelica() {
        return rdbBelica;
    }

    public void setRdbBelica(JRadioButton rdbBelica) {
        this.rdbBelica = rdbBelica;
    }

    public JRadioButton getRdbFisica() {
        return rdbFisica;
    }

    public void setRdbFisica(JRadioButton rdbFisica) {
        this.rdbFisica = rdbFisica;
    }

    public JRadioButton getRdbPsiquica() {
        return rdbPsiquica;
    }

    public void setRdbPsiquica(JRadioButton rdbPsiquica) {
        this.rdbPsiquica = rdbPsiquica;
    }

    public JTextField getTxtCusto() {
        return txtCusto;
    }

    public void setTxtCusto(JTextField txtCusto) {
        this.txtCusto = txtCusto;
    }

    public JTextField getTxtNome() {
        return txtNome;
    }

    public void setTxtNome(JTextField txtNome) {
        this.txtNome = txtNome;
    }

    public JTextField getTxtTeste() {
        return txtTeste;
    }

    public void setTxtTeste(JTextField txtTeste) {
        this.txtTeste = txtTeste;
    }

    public JPanel getPnlTipo() {
        return pnlTipo;
    }

    public void setPnlTipo(JPanel pnlTipo) {
        this.pnlTipo = pnlTipo;
    }

    public boolean isPodeCadastrar() {
        return podeCadastrar;
    }

    public void setPodeCadastrar(boolean podeCadastrar) {
        this.podeCadastrar = podeCadastrar;
    }
    
    
    
    
}
