/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package view.PaineisDeCadastro;

import control.Controle_Habilidade;
import control.Controle_Item;
import java.awt.Color;
import java.awt.HeadlessException;
import java.io.IOException;
import javax.swing.ButtonGroup;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.border.LineBorder;
import model.classes.Arma_A_Distancia;
import model.classes.Arma_Corpo_A_Corpo;
import model.classes.Armadura;
import model.classes.Constante_Atributo;
import model.classes.Dado;
import model.classes.Item;
import model.exception.ArquivoInvalidoException;
import model.exception.DadoInvalidoException;
import model.exception.ItemInvalidoException;
import model.exception.JTextFieldInvalidoException;
import view.validacao.ValidarCampos;

/**
 *
 * @author Luciano
 */
public class PnlCadastrarItem extends javax.swing.JPanel {

    
    private boolean podeCadastrar;
    
    /**
     * Creates new form PnlCadastrarItem
     */
    public PnlCadastrarItem() {
        initComponents();
        PainelFuncoes.definirCorDaBordaJTextField(this, Color.GRAY);
        PainelFuncoes.habilitarCampos(pnlArma, false);
        PainelFuncoes.habilitarCampos(pnlArmadura, false);
        cmbHabilidade.setEnabled(false);
        cmbHabilidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nenhuma"}));
        podeCadastrar = true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpTipoEquipamento = new javax.swing.ButtonGroup();
        grpTipoDeArma = new javax.swing.ButtonGroup();
        grpTipoHabilidade = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtDescricao = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtPreco = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        cmbHabilidade = new javax.swing.JComboBox();
        jLabel19 = new javax.swing.JLabel();
        rdbFisica = new javax.swing.JRadioButton();
        rdbPsiquica = new javax.swing.JRadioButton();
        rdbBelica = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        chkFisico = new javax.swing.JCheckBox();
        chkDestreza = new javax.swing.JCheckBox();
        chkInteligencia = new javax.swing.JCheckBox();
        chkVontade = new javax.swing.JCheckBox();
        txtInteligencia = new javax.swing.JTextField();
        txtFisico = new javax.swing.JTextField();
        txtVontade = new javax.swing.JTextField();
        txtDestreza = new javax.swing.JTextField();
        chkPercepcao = new javax.swing.JCheckBox();
        chkMente = new javax.swing.JCheckBox();
        chkMana = new javax.swing.JCheckBox();
        chkSorte = new javax.swing.JCheckBox();
        txtPercepcao = new javax.swing.JTextField();
        txtMente = new javax.swing.JTextField();
        txtMana = new javax.swing.JTextField();
        txtSorte = new javax.swing.JTextField();
        pnlArma = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        txtLados = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtRolagem = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtDanoAdicional = new javax.swing.JTextField();
        pnlArmaADistancia = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtTiroMirado = new javax.swing.JTextField();
        txtCadencia = new javax.swing.JTextField();
        txtTiroRapido = new javax.swing.JTextField();
        pnlArmaCorpoACorpo = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtEsquiva = new javax.swing.JTextField();
        txtAparo = new javax.swing.JTextField();
        txtGolpe = new javax.swing.JTextField();
        pnlTipoDeArma = new javax.swing.JPanel();
        rdbArmaADistancia = new javax.swing.JRadioButton();
        rdbArmaCorpoACorpo = new javax.swing.JRadioButton();
        pnlArmadura = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtAbsorcaoArmaBranca = new javax.swing.JTextField();
        txtAbsorcaoArmaDeFogo = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        txtPenalidade = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        cmbRegiaoDoCorpo = new javax.swing.JComboBox();
        pnlTipo = new javax.swing.JPanel();
        rdbItem = new javax.swing.JRadioButton();
        rdbArma = new javax.swing.JRadioButton();
        rdbArmadura = new javax.swing.JRadioButton();
        btnLimpar = new javax.swing.JButton();
        btnCadastrar = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Item"));

        jLabel1.setText("Nome:");

        txtNome.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNomeFocusLost(evt);
            }
        });

        jLabel2.setText("Desricao:");

        txtDescricao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescricaoFocusLost(evt);
            }
        });

        jLabel3.setText("Preco:");

        txtPreco.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPrecoFocusLost(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Habilidade Necessaria"));

        cmbHabilidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbHabilidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbHabilidadeActionPerformed(evt);
            }
        });
        cmbHabilidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                cmbHabilidadeFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbHabilidadeFocusLost(evt);
            }
        });

        jLabel19.setText("Tipo de Habilidade:");

        grpTipoHabilidade.add(rdbFisica);
        rdbFisica.setText("Fisica");
        rdbFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbFisicaActionPerformed(evt);
            }
        });

        grpTipoHabilidade.add(rdbPsiquica);
        rdbPsiquica.setText("Psiquica");
        rdbPsiquica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbPsiquicaActionPerformed(evt);
            }
        });

        grpTipoHabilidade.add(rdbBelica);
        rdbBelica.setText("Belica");
        rdbBelica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbBelicaActionPerformed(evt);
            }
        });

        jLabel4.setText("Habilidade:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(rdbFisica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdbPsiquica)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(rdbBelica)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbHabilidade, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(rdbFisica)
                    .addComponent(rdbPsiquica)
                    .addComponent(rdbBelica))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbHabilidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtNome)
                            .addComponent(txtDescricao)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 8, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtDescricao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPreco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Modificadores"));

        chkFisico.setText("Fisico:");
        chkFisico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkFisicoActionPerformed(evt);
            }
        });

        chkDestreza.setText("Destreza:");
        chkDestreza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDestrezaActionPerformed(evt);
            }
        });

        chkInteligencia.setText("Inteligencia:");
        chkInteligencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkInteligenciaActionPerformed(evt);
            }
        });

        chkVontade.setText("Vontade:");
        chkVontade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkVontadeActionPerformed(evt);
            }
        });

        txtInteligencia.setEnabled(false);
        txtInteligencia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtInteligenciaFocusLost(evt);
            }
        });

        txtFisico.setEnabled(false);
        txtFisico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtFisicoFocusLost(evt);
            }
        });

        txtVontade.setEnabled(false);
        txtVontade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtVontadeFocusLost(evt);
            }
        });

        txtDestreza.setEnabled(false);
        txtDestreza.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDestrezaFocusLost(evt);
            }
        });

        chkPercepcao.setText("Percepcao:");
        chkPercepcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkPercepcaoActionPerformed(evt);
            }
        });

        chkMente.setText("Mente:");
        chkMente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkMenteActionPerformed(evt);
            }
        });

        chkMana.setText("Mana:");
        chkMana.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkManaActionPerformed(evt);
            }
        });

        chkSorte.setText("Sorte:");
        chkSorte.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkSorteActionPerformed(evt);
            }
        });

        txtPercepcao.setEnabled(false);
        txtPercepcao.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPercepcaoFocusLost(evt);
            }
        });

        txtMente.setEnabled(false);
        txtMente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtMenteFocusLost(evt);
            }
        });

        txtMana.setEnabled(false);
        txtMana.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtManaFocusLost(evt);
            }
        });

        txtSorte.setEnabled(false);
        txtSorte.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtSorteFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkDestreza)
                            .addComponent(chkFisico))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDestreza, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(txtFisico)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(chkInteligencia)
                            .addComponent(chkVontade))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtVontade, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
                            .addComponent(txtInteligencia))))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(chkSorte)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtSorte, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(chkMana)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMana, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                        .addComponent(chkMente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtMente, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(chkPercepcao)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPercepcao, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkFisico)
                    .addComponent(txtFisico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkPercepcao)
                    .addComponent(txtPercepcao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDestreza)
                    .addComponent(txtDestreza, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkMente)
                    .addComponent(txtMente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkInteligencia)
                    .addComponent(txtInteligencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkMana)
                    .addComponent(txtMana, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkVontade)
                    .addComponent(txtVontade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkSorte)
                    .addComponent(txtSorte, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlArma.setBorder(javax.swing.BorderFactory.createTitledBorder("Arma"));

        jLabel5.setText("Dano (dado):");

        txtLados.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtLadosFocusLost(evt);
            }
        });

        jLabel6.setText("d");

        txtRolagem.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtRolagemFocusLost(evt);
            }
        });

        jLabel7.setText("Dano Adicional:");

        txtDanoAdicional.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDanoAdicionalFocusLost(evt);
            }
        });

        pnlArmaADistancia.setBorder(javax.swing.BorderFactory.createTitledBorder("Arma a Distancia"));

        jLabel8.setText("Tiro Rapido:");

        jLabel9.setText("Tiro Mirado:");

        jLabel10.setText("Cadencia:");

        txtTiroMirado.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTiroMiradoFocusLost(evt);
            }
        });

        txtCadencia.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCadenciaFocusLost(evt);
            }
        });

        txtTiroRapido.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtTiroRapidoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout pnlArmaADistanciaLayout = new javax.swing.GroupLayout(pnlArmaADistancia);
        pnlArmaADistancia.setLayout(pnlArmaADistanciaLayout);
        pnlArmaADistanciaLayout.setHorizontalGroup(
            pnlArmaADistanciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlArmaADistanciaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlArmaADistanciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel9)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlArmaADistanciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTiroRapido)
                    .addComponent(txtTiroMirado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 58, Short.MAX_VALUE)
                    .addComponent(txtCadencia))
                .addContainerGap())
        );
        pnlArmaADistanciaLayout.setVerticalGroup(
            pnlArmaADistanciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlArmaADistanciaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlArmaADistanciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtTiroRapido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlArmaADistanciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTiroMirado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(pnlArmaADistanciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtCadencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlArmaCorpoACorpo.setBorder(javax.swing.BorderFactory.createTitledBorder("Arma Corpo a Corpo"));

        jLabel12.setText("Golpe:");

        jLabel13.setText("Aparo:");

        jLabel14.setText("Esquiva:");

        txtEsquiva.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEsquivaFocusLost(evt);
            }
        });

        txtAparo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAparoFocusLost(evt);
            }
        });

        txtGolpe.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtGolpeFocusLost(evt);
            }
        });

        javax.swing.GroupLayout pnlArmaCorpoACorpoLayout = new javax.swing.GroupLayout(pnlArmaCorpoACorpo);
        pnlArmaCorpoACorpo.setLayout(pnlArmaCorpoACorpoLayout);
        pnlArmaCorpoACorpoLayout.setHorizontalGroup(
            pnlArmaCorpoACorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlArmaCorpoACorpoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlArmaCorpoACorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlArmaCorpoACorpoLayout.createSequentialGroup()
                        .addGroup(pnlArmaCorpoACorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addGap(18, 18, 18)
                        .addGroup(pnlArmaCorpoACorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtGolpe, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtAparo, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnlArmaCorpoACorpoLayout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtEsquiva, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlArmaCorpoACorpoLayout.setVerticalGroup(
            pnlArmaCorpoACorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlArmaCorpoACorpoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlArmaCorpoACorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(txtGolpe, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlArmaCorpoACorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(txtAparo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlArmaCorpoACorpoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(txtEsquiva, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTipoDeArma.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo"));

        grpTipoDeArma.add(rdbArmaADistancia);
        rdbArmaADistancia.setText("Arma a Distancia");
        rdbArmaADistancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbArmaADistanciaActionPerformed(evt);
            }
        });

        grpTipoDeArma.add(rdbArmaCorpoACorpo);
        rdbArmaCorpoACorpo.setText("Arma Corpo a Corpo");
        rdbArmaCorpoACorpo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbArmaCorpoACorpoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTipoDeArmaLayout = new javax.swing.GroupLayout(pnlTipoDeArma);
        pnlTipoDeArma.setLayout(pnlTipoDeArmaLayout);
        pnlTipoDeArmaLayout.setHorizontalGroup(
            pnlTipoDeArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeArmaLayout.createSequentialGroup()
                .addGroup(pnlTipoDeArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rdbArmaADistancia)
                    .addComponent(rdbArmaCorpoACorpo))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlTipoDeArmaLayout.setVerticalGroup(
            pnlTipoDeArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoDeArmaLayout.createSequentialGroup()
                .addComponent(rdbArmaADistancia)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(rdbArmaCorpoACorpo))
        );

        javax.swing.GroupLayout pnlArmaLayout = new javax.swing.GroupLayout(pnlArma);
        pnlArma.setLayout(pnlArmaLayout);
        pnlArmaLayout.setHorizontalGroup(
            pnlArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlArmaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnlArmaLayout.createSequentialGroup()
                        .addGroup(pnlArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(pnlArmaLayout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtLados, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtRolagem, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(pnlArmaLayout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDanoAdicional)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlTipoDeArma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnlArmaLayout.createSequentialGroup()
                        .addComponent(pnlArmaADistancia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlArmaCorpoACorpo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlArmaLayout.setVerticalGroup(
            pnlArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlArmaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlArmaLayout.createSequentialGroup()
                        .addGroup(pnlArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtLados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(txtRolagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(txtDanoAdicional, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(pnlTipoDeArma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(13, 13, 13)
                .addGroup(pnlArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlArmaADistancia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlArmaCorpoACorpo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlArmadura.setBorder(javax.swing.BorderFactory.createTitledBorder("Armadura"));

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Absorcao"));

        jLabel15.setText("Distancia:");

        jLabel16.setText("Corpo a Corpo");

        txtAbsorcaoArmaBranca.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAbsorcaoArmaBrancaFocusLost(evt);
            }
        });

        txtAbsorcaoArmaDeFogo.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtAbsorcaoArmaDeFogoFocusLost(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addGap(2, 2, 2)
                .addComponent(txtAbsorcaoArmaBranca)
                .addGap(24, 24, 24)
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtAbsorcaoArmaDeFogo, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(txtAbsorcaoArmaBranca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16)
                    .addComponent(txtAbsorcaoArmaDeFogo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel17.setText("Penalidade:");

        txtPenalidade.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPenalidadeFocusLost(evt);
            }
        });

        jLabel18.setText("Regiao do Corpo:");

        cmbRegiaoDoCorpo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "", "A", "B", "C", "D", "E", "F", "G", "H" }));

        javax.swing.GroupLayout pnlArmaduraLayout = new javax.swing.GroupLayout(pnlArmadura);
        pnlArmadura.setLayout(pnlArmaduraLayout);
        pnlArmaduraLayout.setHorizontalGroup(
            pnlArmaduraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlArmaduraLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlArmaduraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlArmaduraLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtPenalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cmbRegiaoDoCorpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlArmaduraLayout.setVerticalGroup(
            pnlArmaduraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlArmaduraLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(pnlArmaduraLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(txtPenalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18)
                    .addComponent(cmbRegiaoDoCorpo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlTipo.setBorder(javax.swing.BorderFactory.createTitledBorder("Tipo de Equipamento"));

        grpTipoEquipamento.add(rdbItem);
        rdbItem.setText("Item");
        rdbItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbItemActionPerformed(evt);
            }
        });

        grpTipoEquipamento.add(rdbArma);
        rdbArma.setText("Arma");
        rdbArma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbArmaActionPerformed(evt);
            }
        });

        grpTipoEquipamento.add(rdbArmadura);
        rdbArmadura.setText("Armadura");
        rdbArmadura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbArmaduraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlTipoLayout = new javax.swing.GroupLayout(pnlTipo);
        pnlTipo.setLayout(pnlTipoLayout);
        pnlTipoLayout.setHorizontalGroup(
            pnlTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbItem)
                .addGap(18, 18, 18)
                .addComponent(rdbArma)
                .addGap(18, 18, 18)
                .addComponent(rdbArmadura)
                .addContainerGap(111, Short.MAX_VALUE))
        );
        pnlTipoLayout.setVerticalGroup(
            pnlTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTipoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTipoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbItem)
                    .addComponent(rdbArma)
                    .addComponent(rdbArmadura))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        btnLimpar.setText("Limpar");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });

        btnCadastrar.setText("Cadastrar");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(pnlTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnCadastrar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLimpar))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(pnlArmadura, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(pnlArma, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap(27, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlArma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pnlArmadura, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnLimpar)
                            .addComponent(btnCadastrar)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(13, 13, 13)
                        .addComponent(pnlTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chkFisicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkFisicoActionPerformed
   
        txtFisico.setEnabled(chkFisico.isSelected());
        if(!chkFisico.isSelected()){
            txtFisico.setText(null);
            txtFisico.setBorder(new LineBorder(Color.GRAY));
            txtFisico.setToolTipText(null);
        }
    }//GEN-LAST:event_chkFisicoActionPerformed

    private void chkDestrezaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDestrezaActionPerformed
      
        txtDestreza.setEnabled(chkDestreza.isSelected());
        if(!chkDestreza.isSelected()){
            txtDestreza.setText(null);
            txtDestreza.setBorder(new LineBorder(Color.GRAY));
            txtDestreza.setToolTipText(null);
        }
    }//GEN-LAST:event_chkDestrezaActionPerformed

    private void chkInteligenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkInteligenciaActionPerformed
      
        txtInteligencia.setEnabled(chkInteligencia.isSelected());
        if(!chkInteligencia.isSelected()){
            txtInteligencia.setText(null);
            txtInteligencia.setBorder(new LineBorder(Color.GRAY));
            txtInteligencia.setToolTipText(null);
        }
    }//GEN-LAST:event_chkInteligenciaActionPerformed

    private void chkVontadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkVontadeActionPerformed
       
        txtVontade.setEnabled(chkVontade.isSelected());
        if(!chkVontade.isSelected()){
            txtVontade.setText(null);
            txtVontade.setBorder(new LineBorder(Color.GRAY));
            txtVontade.setToolTipText(null);
        }
    }//GEN-LAST:event_chkVontadeActionPerformed

    private void txtInteligenciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtInteligenciaFocusLost
     
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtInteligenciaFocusLost

    private void txtFisicoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtFisicoFocusLost
        // TODO add your handling code here:
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtFisicoFocusLost

    private void txtVontadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtVontadeFocusLost
    
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtVontadeFocusLost

    private void txtDestrezaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDestrezaFocusLost
     
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtDestrezaFocusLost

    private void chkPercepcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkPercepcaoActionPerformed
     
        txtPercepcao.setEnabled(chkPercepcao.isSelected());
        if(!chkPercepcao.isSelected()){
            txtPercepcao.setText(null);
            txtPercepcao.setBorder(new LineBorder(Color.GRAY));
            txtPercepcao.setToolTipText(null);
        }
    }//GEN-LAST:event_chkPercepcaoActionPerformed

    private void chkMenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkMenteActionPerformed
      
        txtMente.setEnabled(chkMente.isSelected());
        if(!chkMente.isSelected()){
            txtMente.setText(null);
            txtMente.setBorder(new LineBorder(Color.GRAY));
            txtMente.setToolTipText(null);
        }
    }//GEN-LAST:event_chkMenteActionPerformed

    private void chkManaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkManaActionPerformed
     
        txtMana.setEnabled(chkMana.isSelected());
        if(!chkMana.isSelected()){
            txtMana.setText(null);
            txtMana.setBorder(new LineBorder(Color.GRAY));
            txtMana.setToolTipText(null);
        }
    }//GEN-LAST:event_chkManaActionPerformed

    private void chkSorteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkSorteActionPerformed
    
        txtSorte.setEnabled(chkSorte.isSelected());
        if(!chkSorte.isSelected()){
            txtSorte.setText(null);
            txtSorte.setBorder(new LineBorder(Color.GRAY));
            txtSorte.setToolTipText(null);
        }
    }//GEN-LAST:event_chkSorteActionPerformed

    private void txtPercepcaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPercepcaoFocusLost
      
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtPercepcaoFocusLost

    private void txtMenteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtMenteFocusLost
      
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtMenteFocusLost

    private void txtManaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtManaFocusLost
      
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtManaFocusLost

    private void txtSorteFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtSorteFocusLost
      
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtSorteFocusLost

    private void rdbItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbItemActionPerformed
       
        PainelFuncoes.habilitarCampos(pnlArma, false);
        PainelFuncoes.habilitarCampos(pnlArmadura, false);
        grpTipoDeArma.clearSelection();
        rdbItem.setForeground(Color.BLACK);
        rdbArma.setForeground(Color.BLACK);
        rdbArmadura.setForeground(Color.BLACK);
    }//GEN-LAST:event_rdbItemActionPerformed

    private void rdbArmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbArmaActionPerformed
      
        PainelFuncoes.habilitarCampos(pnlArmadura, false);
        PainelFuncoes.habilitarCampos(pnlArma, true);
        if( (!rdbArmaADistancia.isSelected()) && (!rdbArmaCorpoACorpo.isSelected()) ){
            PainelFuncoes.habilitarCampos(pnlArmaADistancia, false);
            PainelFuncoes.habilitarCampos(pnlArmaCorpoACorpo, false);
        }
        rdbItem.setForeground(Color.BLACK);
        rdbArma.setForeground(Color.BLACK);
        rdbArmadura.setForeground(Color.BLACK);
    }//GEN-LAST:event_rdbArmaActionPerformed

    private void rdbArmaduraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbArmaduraActionPerformed
        
        PainelFuncoes.habilitarCampos(pnlArma, false);
        PainelFuncoes.habilitarCampos(pnlArmadura, true);
        grpTipoDeArma.clearSelection();
        rdbItem.setForeground(Color.BLACK);
        rdbArma.setForeground(Color.BLACK);
        rdbArmadura.setForeground(Color.BLACK);
    }//GEN-LAST:event_rdbArmaduraActionPerformed

    private void txtNomeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNomeFocusLost
      
        try{
            ValidarCampos.validarCampoTexto((JTextField)evt.getSource(), true);
        } catch(JTextFieldInvalidoException e){ 
        }
    }//GEN-LAST:event_txtNomeFocusLost

    private void txtDescricaoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescricaoFocusLost
   
        try{
            ValidarCampos.validarCampoTexto((JTextField)evt.getSource(), true);
        } catch(JTextFieldInvalidoException e){ 
        }
    }//GEN-LAST:event_txtDescricaoFocusLost

    private void txtPrecoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrecoFocusLost
    
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtPrecoFocusLost

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
       
        limparCampos();        
    }//GEN-LAST:event_btnLimparActionPerformed

    private void txtLadosFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtLadosFocusLost
        
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtLadosFocusLost

    private void txtRolagemFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtRolagemFocusLost
      
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtRolagemFocusLost

    private void txtDanoAdicionalFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDanoAdicionalFocusLost
       
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtDanoAdicionalFocusLost

    private void txtTiroRapidoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTiroRapidoFocusLost
        
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtTiroRapidoFocusLost

    private void txtTiroMiradoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtTiroMiradoFocusLost
      
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtTiroMiradoFocusLost

    private void txtCadenciaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCadenciaFocusLost
     
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtCadenciaFocusLost

    private void txtGolpeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtGolpeFocusLost
        
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtGolpeFocusLost

    private void txtAparoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAparoFocusLost
       
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtAparoFocusLost

    private void txtEsquivaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEsquivaFocusLost
       
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtEsquivaFocusLost

    private void txtAbsorcaoArmaBrancaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAbsorcaoArmaBrancaFocusLost
     
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtAbsorcaoArmaBrancaFocusLost

    private void txtAbsorcaoArmaDeFogoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtAbsorcaoArmaDeFogoFocusLost
       
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtAbsorcaoArmaDeFogoFocusLost

    private void txtPenalidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPenalidadeFocusLost
        
        try{
            ValidarCampos.validarCampoInteiro((JTextField)evt.getSource());
        } catch(JTextFieldInvalidoException e){
        }
    }//GEN-LAST:event_txtPenalidadeFocusLost

    private void cmbHabilidadeFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbHabilidadeFocusLost
        
    }//GEN-LAST:event_cmbHabilidadeFocusLost

    private void cmbHabilidadeFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbHabilidadeFocusGained
       
        
    }//GEN-LAST:event_cmbHabilidadeFocusGained

    private void rdbFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbFisicaActionPerformed
        
        carregarJComboBox("Fisica");
        cmbHabilidade.setEnabled(true);
    }//GEN-LAST:event_rdbFisicaActionPerformed

    private void rdbPsiquicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbPsiquicaActionPerformed
       
        carregarJComboBox("Psiquica");
        cmbHabilidade.setEnabled(true);
    }//GEN-LAST:event_rdbPsiquicaActionPerformed

    private void rdbBelicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbBelicaActionPerformed
        carregarJComboBox("Belica");
        cmbHabilidade.setEnabled(true);
    }//GEN-LAST:event_rdbBelicaActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        if(podeCadastrar){
            cadastrarItem();
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void rdbArmaADistanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbArmaADistanciaActionPerformed
        PainelFuncoes.habilitarCampos(pnlArmaCorpoACorpo, false);
        PainelFuncoes.habilitarCampos(pnlArmaADistancia, true);
        rdbArmaADistancia.setForeground(Color.BLACK);
        rdbArmaCorpoACorpo.setForeground(Color.BLACK);
    }//GEN-LAST:event_rdbArmaADistanciaActionPerformed

    private void rdbArmaCorpoACorpoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbArmaCorpoACorpoActionPerformed
        // TODO add your handling code here:
        PainelFuncoes.habilitarCampos(pnlArmaADistancia, false);
        PainelFuncoes.habilitarCampos(pnlArmaCorpoACorpo, true);
        rdbArmaADistancia.setForeground(Color.BLACK);
        rdbArmaCorpoACorpo.setForeground(Color.BLACK);
    }//GEN-LAST:event_rdbArmaCorpoACorpoActionPerformed

    private void cmbHabilidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbHabilidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbHabilidadeActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JCheckBox chkDestreza;
    private javax.swing.JCheckBox chkFisico;
    private javax.swing.JCheckBox chkInteligencia;
    private javax.swing.JCheckBox chkMana;
    private javax.swing.JCheckBox chkMente;
    private javax.swing.JCheckBox chkPercepcao;
    private javax.swing.JCheckBox chkSorte;
    private javax.swing.JCheckBox chkVontade;
    private javax.swing.JComboBox cmbHabilidade;
    private javax.swing.JComboBox cmbRegiaoDoCorpo;
    private javax.swing.ButtonGroup grpTipoDeArma;
    private javax.swing.ButtonGroup grpTipoEquipamento;
    private javax.swing.ButtonGroup grpTipoHabilidade;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel pnlArma;
    private javax.swing.JPanel pnlArmaADistancia;
    private javax.swing.JPanel pnlArmaCorpoACorpo;
    private javax.swing.JPanel pnlArmadura;
    private javax.swing.JPanel pnlTipo;
    private javax.swing.JPanel pnlTipoDeArma;
    private javax.swing.JRadioButton rdbArma;
    private javax.swing.JRadioButton rdbArmaADistancia;
    private javax.swing.JRadioButton rdbArmaCorpoACorpo;
    private javax.swing.JRadioButton rdbArmadura;
    private javax.swing.JRadioButton rdbBelica;
    private javax.swing.JRadioButton rdbFisica;
    private javax.swing.JRadioButton rdbItem;
    private javax.swing.JRadioButton rdbPsiquica;
    private javax.swing.JTextField txtAbsorcaoArmaBranca;
    private javax.swing.JTextField txtAbsorcaoArmaDeFogo;
    private javax.swing.JTextField txtAparo;
    private javax.swing.JTextField txtCadencia;
    private javax.swing.JTextField txtDanoAdicional;
    private javax.swing.JTextField txtDescricao;
    private javax.swing.JTextField txtDestreza;
    private javax.swing.JTextField txtEsquiva;
    private javax.swing.JTextField txtFisico;
    private javax.swing.JTextField txtGolpe;
    private javax.swing.JTextField txtInteligencia;
    private javax.swing.JTextField txtLados;
    private javax.swing.JTextField txtMana;
    private javax.swing.JTextField txtMente;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtPenalidade;
    private javax.swing.JTextField txtPercepcao;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtRolagem;
    private javax.swing.JTextField txtSorte;
    private javax.swing.JTextField txtTiroMirado;
    private javax.swing.JTextField txtTiroRapido;
    private javax.swing.JTextField txtVontade;
    // End of variables declaration//GEN-END:variables

    
    public void limparCampos(){
        PainelFuncoes.limparTodosOsCampos(this);
        PainelFuncoes.definirCorDaBordaJTextField(this, Color.GRAY);
        
        PainelFuncoes.habilitarCampos(pnlArma, false);
        PainelFuncoes.habilitarCampos(pnlArmadura, false);
        
        grpTipoDeArma.clearSelection();
        grpTipoEquipamento.clearSelection();
        grpTipoHabilidade.clearSelection();
        
        cmbHabilidade.setEnabled(false);
        
        txtDestreza.setEnabled(false);
        txtFisico.setEnabled(false);
        txtInteligencia.setEnabled(false);
        txtMana.setEnabled(false);
        txtMente.setEnabled(false);
        txtPercepcao.setEnabled(false);
        txtSorte.setEnabled(false);
        txtVontade.setEnabled(false);
    }
    
    public Item pegarDadosDoPainel(){
        try{
            Item item = null;
            
            String nome = ValidarCampos.validarCampoTexto(txtNome, true);
            String descricao = ValidarCampos.validarCampoTexto(txtDescricao, true);
            int preco = ValidarCampos.validarCampoInteiro(txtPreco);
            String habilidade_Necessaria = cmbHabilidade.getSelectedItem().toString();
            
            final int FISICO = Constante_Atributo.FISICO;
            final int DESTREZA = Constante_Atributo.DESTREZA;
            final int INTELIGENCIA = Constante_Atributo.INTELIGENCIA;
            final int VONTADE = Constante_Atributo.VONTADE;
            final int PERCEPCAO = Constante_Atributo.PERCEPCAO;
            final int MENTE = Constante_Atributo.MENTE;
            final int MANA = Constante_Atributo.MANA;
            final int SORTE = Constante_Atributo.SORTE;
            
            int modificador[] = new int[8];
            boolean possui_modificador = false;
            if(chkFisico.isSelected()){
                modificador[FISICO] = ValidarCampos.validarCampoInteiro(txtFisico);
                possui_modificador = true;
            }
            if(chkDestreza.isSelected()){
                modificador[DESTREZA] = ValidarCampos.validarCampoInteiro(txtDestreza);
                possui_modificador = true;
            }
            if(chkInteligencia.isSelected()){
                modificador[INTELIGENCIA] = ValidarCampos.validarCampoInteiro(txtInteligencia);
                possui_modificador = true;
            }
            if(chkVontade.isSelected()){
                modificador[VONTADE] = ValidarCampos.validarCampoInteiro(txtVontade);
                possui_modificador = true;
            }
            if(chkPercepcao.isSelected()){
                modificador[PERCEPCAO] = ValidarCampos.validarCampoInteiro(txtPercepcao);
                possui_modificador = true;
            }
            if(chkMente.isSelected()){
                modificador[MENTE] = ValidarCampos.validarCampoInteiro(txtMente);
                possui_modificador = true;
            }
            if(chkMana.isSelected()){
                modificador[MANA] = ValidarCampos.validarCampoInteiro(txtMana);
                possui_modificador = true;
            }
            if(chkSorte.isSelected()){
                modificador[SORTE] = ValidarCampos.validarCampoInteiro(txtSorte);
                possui_modificador = true;
            }
            
            
            String tipoDeEquipamento = null;
            if(rdbItem.isSelected()){
                tipoDeEquipamento = "Generico";
            }
            if(rdbArma.isSelected()){
                tipoDeEquipamento = "Arma";
            }
            if(rdbArmadura.isSelected()){
                tipoDeEquipamento = "Armadura";
            }
            
            if(tipoDeEquipamento == null){
                rdbItem.setForeground(Color.RED);
                rdbArma.setForeground(Color.RED);
                rdbArmadura.setForeground(Color.RED);
                
                rdbItem.setToolTipText("Algum dos Tipos de Equipamento deve ser Selecionado");
                rdbArma.setToolTipText("Algum dos Tipos de Equipamento deve ser Selecionado");
                rdbArmadura.setToolTipText("Algum dos Tipos de Equipamento deve ser Selecionado");
                
                JOptionPane.showMessageDialog(null,"ERROR: " + "Tipo de Equipamento nao Selecionado.","Erro",JOptionPane.ERROR_MESSAGE);
            }else{
                if(tipoDeEquipamento == "Generico"){
                    if(possui_modificador){
                        item = new Item(nome, descricao, false, modificador, preco, habilidade_Necessaria);
                    }else{
                        item = new Item(nome, descricao, false, null, preco, habilidade_Necessaria);
                    }
                }
                if(tipoDeEquipamento == "Arma"){
                    
                    int lados = ValidarCampos.validarCampoInteiro(txtLados);
                    int rolagem = ValidarCampos.validarCampoInteiro(txtRolagem);
                    Dado dado = new Dado(lados, rolagem);
                    int danoAdicional = ValidarCampos.validarCampoInteiro(txtDanoAdicional);
                    
                    String tipoDeArma = null;
                    if(rdbArmaADistancia.isSelected()){
                        tipoDeArma = "Arma_A_Distancia";
                    }
                    if(rdbArmaCorpoACorpo.isSelected()){
                        tipoDeArma = "Arma_Corpo_A_Corpo";
                    }
                    
                    if(tipoDeArma == null){
                        rdbArmaADistancia.setForeground(Color.RED);
                        rdbArmaCorpoACorpo.setForeground(Color.RED);
                        
                        rdbArmaADistancia.setToolTipText("Algum dos Tipos de Arma deve ser Selecionado");
                        rdbArmaCorpoACorpo.setToolTipText("Algum dos Tipos de Arma deve ser Selecionado");
                        
                        JOptionPane.showMessageDialog(null,"ERROR: " + "Tipo de Arma nao Selecionado.","Erro",JOptionPane.ERROR_MESSAGE);
                    }else{
                        if(tipoDeArma == "Arma_A_Distancia"){
                            
                            int tiroRapido = ValidarCampos.validarCampoInteiro(txtTiroRapido);
                            int tiroMirado = ValidarCampos.validarCampoInteiro(txtTiroMirado);
                            int cadencia = ValidarCampos.validarCampoInteiro(txtCadencia);
                            
                            if(possui_modificador){
                                item = new Arma_A_Distancia(nome, descricao, dado, danoAdicional, tiroRapido, tiroMirado, cadencia, false, modificador, preco, habilidade_Necessaria);
                            }else{
                                item = new Arma_A_Distancia(nome, descricao, dado, danoAdicional, tiroRapido, tiroMirado, cadencia, false, null, preco, habilidade_Necessaria);
                            }
                            
                        }
                        
                        if(tipoDeArma == "Arma_Corpo_A_Corpo"){
                            int golpe = ValidarCampos.validarCampoInteiro(txtGolpe);
                            int aparo = ValidarCampos.validarCampoInteiro(txtAparo);
                            int esquiva = ValidarCampos.validarCampoInteiro(txtEsquiva);
                            
                            if(possui_modificador){
                                item = new Arma_Corpo_A_Corpo(nome, descricao, dado, danoAdicional, golpe, aparo, esquiva, false, modificador, preco, habilidade_Necessaria);
                            }else{
                                item = new Arma_Corpo_A_Corpo(nome, descricao, dado, danoAdicional, golpe, aparo, esquiva, false, null, preco, habilidade_Necessaria);
                            }
                            
                        }
                    }
                }
                
                if(tipoDeEquipamento == "Armadura"){
                    int absorcaoArmaBranca = ValidarCampos.validarCampoInteiro(txtAbsorcaoArmaBranca);
                    int absorcaoArmaDeFogo = ValidarCampos.validarCampoInteiro(txtAbsorcaoArmaDeFogo);
                    int penalidade = ValidarCampos.validarCampoInteiro(txtPenalidade);
                    char regiaoDoCorpo = cmbRegiaoDoCorpo.getSelectedItem().toString().charAt(0);
                    
                    if(possui_modificador){
                        item = new Armadura(nome, descricao, absorcaoArmaBranca, absorcaoArmaDeFogo, penalidade, regiaoDoCorpo, false, modificador, preco, habilidade_Necessaria);
                    }else{
                        item = new Armadura(nome, descricao, absorcaoArmaBranca, absorcaoArmaDeFogo, penalidade, regiaoDoCorpo, false, null, preco, habilidade_Necessaria);
                    }
                    
                }
                
                return item;
            }
        } catch(JTextFieldInvalidoException | HeadlessException | ItemInvalidoException | DadoInvalidoException e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),"Erro",JOptionPane.ERROR_MESSAGE);
        } catch(StringIndexOutOfBoundsException e){
            JOptionPane.showMessageDialog(null,"ERROR: " + "Selecione a Regiao do Corpo para a Armadura","Erro",JOptionPane.ERROR_MESSAGE);
        }
        return null;
    }
    
    private void cadastrarItem(){
        try{
            Item item = pegarDadosDoPainel();
            
            if(rdbItem.isSelected()){
                Controle_Item.cadItemGenerico(item.getNome(), item.getDescricao(), item.isUsando(), item.getBonus_atributo(), item.getPreco(), item.getHabilidade_Necessaria());
                JOptionPane.showMessageDialog(null,"Cadastro Item: " + item.getNome() +"\nRealizado com Sucesso!","Concluido",JOptionPane.INFORMATION_MESSAGE);
                limparCampos();
            }
            
            if(rdbArma.isSelected()){
                if(rdbArmaADistancia.isSelected()){
                    Arma_A_Distancia arma = (Arma_A_Distancia)item;
                    Controle_Item.cadArma_A_Distancia(arma.getNome(), arma.getDescricao(), arma.getDano(), arma.getDanoAdicional(), arma.getTiro_Rapido(), arma.getTiro_Mirado(), arma.getCadencia(), arma.isUsando(), arma.getBonus_atributo(), arma.getPreco(), arma.getHabilidade_Necessaria());
                    JOptionPane.showMessageDialog(null,"Cadastro Arma a Distancia: " + arma.getNome() +"\nRealizado com Sucesso!","Concluido",JOptionPane.INFORMATION_MESSAGE);
                    limparCampos();
                }
                if(rdbArmaCorpoACorpo.isSelected()){
                    Arma_Corpo_A_Corpo arma = (Arma_Corpo_A_Corpo)item;
                    Controle_Item.cadArma_Corpo_A_Corpo(arma.getNome(), arma.getDescricao(), arma.getDano(), arma.getDanoAdicional(), arma.getGolpe(), arma.getAparo(), arma.getEsquiva(), arma.isUsando(), arma.getBonus_atributo(), arma.getPreco(), arma.getHabilidade_Necessaria());
                    JOptionPane.showMessageDialog(null,"Cadastro Arma Corpo a Corpo: " + arma.getNome() +"\nRealizado com Sucesso!","Concluido",JOptionPane.INFORMATION_MESSAGE);
                    limparCampos();
                }
            }
            
            if(rdbArmadura.isSelected()){
                Armadura armadura = (Armadura)item;
                Controle_Item.cadArmadura(armadura.getNome(), armadura.getDescricao(), armadura.getAbsorcao_Distancia(), armadura.getAbsorcao_CorpoACorpo(), armadura.getPenalidade(), armadura.getRegiao_Do_Corpo(), armadura.isUsando(), armadura.getBonus_atributo(), armadura.getPreco(), armadura.getHabilidade_Necessaria());
                JOptionPane.showMessageDialog(null,"Cadastro Armadura: " + armadura.getNome() +"\nRealizado com Sucesso!","Concluido",JOptionPane.INFORMATION_MESSAGE);
                limparCampos();
            }
            
            
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null,"ERROR: Campo Nulo","Erro",JOptionPane.ERROR_MESSAGE);
        } catch(ArquivoInvalidoException | HeadlessException | IOException | ItemInvalidoException e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),"Erro",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    public void carregarJComboBox(String tipoDeHabilidade){
        cmbHabilidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nenhuma"}));
        
        String diretorios[] = null;
        
        switch(tipoDeHabilidade){
            case "Fisica":
                diretorios = Controle_Habilidade.listarHabilidadesFisicas();
                break;
            
            case "Psiquica":
                diretorios = Controle_Habilidade.listarHabilidadesPsiquicas();
                break;
                
            case "Belica":
                diretorios = Controle_Habilidade.listarHabilidadesBelicas();
                break;
        }
        if(diretorios != null){
            if(diretorios.length > 0){
                for(int i = 0; i < diretorios.length; i++){
                    cmbHabilidade.addItem(diretorios[i]);
                }
            }
        }
    }

    public boolean isPodeCadastrar() {
        return podeCadastrar;
    }

    public void setPodeCadastrar(boolean podeCadastrar) {
        this.podeCadastrar = podeCadastrar;
    }

    public JButton getBtnCadastrar() {
        return btnCadastrar;
    }

    public void setBtnCadastrar(JButton btnCadastrar) {
        this.btnCadastrar = btnCadastrar;
    }

    public JButton getBtnLimpar() {
        return btnLimpar;
    }

    public void setBtnLimpar(JButton btnLimpar) {
        this.btnLimpar = btnLimpar;
    }

    public JCheckBox getChkDestreza() {
        return chkDestreza;
    }

    public void setChkDestreza(JCheckBox chkDestreza) {
        this.chkDestreza = chkDestreza;
    }

    public JCheckBox getChkFisico() {
        return chkFisico;
    }

    public void setChkFisico(JCheckBox chkFisico) {
        this.chkFisico = chkFisico;
    }

    public JCheckBox getChkInteligencia() {
        return chkInteligencia;
    }

    public void setChkInteligencia(JCheckBox chkInteligencia) {
        this.chkInteligencia = chkInteligencia;
    }

    public JCheckBox getChkMana() {
        return chkMana;
    }

    public void setChkMana(JCheckBox chkMana) {
        this.chkMana = chkMana;
    }

    public JCheckBox getChkMente() {
        return chkMente;
    }

    public void setChkMente(JCheckBox chkMente) {
        this.chkMente = chkMente;
    }

    public JCheckBox getChkPercepcao() {
        return chkPercepcao;
    }

    public void setChkPercepcao(JCheckBox chkPercepcao) {
        this.chkPercepcao = chkPercepcao;
    }

    public JCheckBox getChkSorte() {
        return chkSorte;
    }

    public void setChkSorte(JCheckBox chkSorte) {
        this.chkSorte = chkSorte;
    }

    public JCheckBox getChkVontade() {
        return chkVontade;
    }

    public void setChkVontade(JCheckBox chkVontade) {
        this.chkVontade = chkVontade;
    }

    public JComboBox getCmbHabilidade() {
        return cmbHabilidade;
    }

    public void setCmbHabilidade(JComboBox cmbHabilidade) {
        this.cmbHabilidade = cmbHabilidade;
    }

    public ButtonGroup getGrpTipoDeArma() {
        return grpTipoDeArma;
    }

    public void setGrpTipoDeArma(ButtonGroup grpTipoDeArma) {
        this.grpTipoDeArma = grpTipoDeArma;
    }

    public ButtonGroup getGrpTipoEquipamento() {
        return grpTipoEquipamento;
    }

    public void setGrpTipoEquipamento(ButtonGroup grpTipoEquipamento) {
        this.grpTipoEquipamento = grpTipoEquipamento;
    }

    public ButtonGroup getGrpTipoHabilidade() {
        return grpTipoHabilidade;
    }

    public void setGrpTipoHabilidade(ButtonGroup grpTipoHabilidade) {
        this.grpTipoHabilidade = grpTipoHabilidade;
    }

    public JPanel getPnlArma() {
        return pnlArma;
    }

    public void setPnlArma(JPanel pnlArma) {
        this.pnlArma = pnlArma;
    }

    public JPanel getPnlArmaADistancia() {
        return pnlArmaADistancia;
    }

    public void setPnlArmaADistancia(JPanel pnlArmaADistancia) {
        this.pnlArmaADistancia = pnlArmaADistancia;
    }

    public JPanel getPnlArmaCorpoACorpo() {
        return pnlArmaCorpoACorpo;
    }

    public void setPnlArmaCorpoACorpo(JPanel pnlArmaCorpoACorpo) {
        this.pnlArmaCorpoACorpo = pnlArmaCorpoACorpo;
    }

    public JPanel getPnlArmadura() {
        return pnlArmadura;
    }

    public void setPnlArmadura(JPanel pnlArmadura) {
        this.pnlArmadura = pnlArmadura;
    }

    public JPanel getPnlTipo() {
        return pnlTipo;
    }

    public void setPnlTipo(JPanel pnlTipo) {
        this.pnlTipo = pnlTipo;
    }

    public JPanel getPnlTipoDeArma() {
        return pnlTipoDeArma;
    }

    public void setPnlTipoDeArma(JPanel pnlTipoDeArma) {
        this.pnlTipoDeArma = pnlTipoDeArma;
    }

    public JRadioButton getRdbArma() {
        return rdbArma;
    }

    public void setRdbArma(JRadioButton rdbArma) {
        this.rdbArma = rdbArma;
    }

    public JRadioButton getRdbArmaADistancia() {
        return rdbArmaADistancia;
    }

    public void setRdbArmaADistancia(JRadioButton rdbArmaADistancia) {
        this.rdbArmaADistancia = rdbArmaADistancia;
    }

    public JRadioButton getRdbArmaCorpoACorpo() {
        return rdbArmaCorpoACorpo;
    }

    public void setRdbArmaCorpoACorpo(JRadioButton rdbArmaCorpoACorpo) {
        this.rdbArmaCorpoACorpo = rdbArmaCorpoACorpo;
    }

    public JRadioButton getRdbArmadura() {
        return rdbArmadura;
    }

    public void setRdbArmadura(JRadioButton rdbArmadura) {
        this.rdbArmadura = rdbArmadura;
    }

    public JRadioButton getRdbBelica() {
        return rdbBelica;
    }

    public void setRdbBelica(JRadioButton rdbBelica) {
        this.rdbBelica = rdbBelica;
    }

    public JRadioButton getRdbFisica() {
        return rdbFisica;
    }

    public void setRdbFisica(JRadioButton rdbFisica) {
        this.rdbFisica = rdbFisica;
    }

    public JRadioButton getRdbItem() {
        return rdbItem;
    }

    public void setRdbItem(JRadioButton rdbItem) {
        this.rdbItem = rdbItem;
    }

    public JRadioButton getRdbPsiquica() {
        return rdbPsiquica;
    }

    public void setRdbPsiquica(JRadioButton rdbPsiquica) {
        this.rdbPsiquica = rdbPsiquica;
    }

    public JTextField getTxtAbsorcaoArmaBranca() {
        return txtAbsorcaoArmaBranca;
    }

    public void setTxtAbsorcaoArmaBranca(JTextField txtAbsorcaoArmaBranca) {
        this.txtAbsorcaoArmaBranca = txtAbsorcaoArmaBranca;
    }

    public JTextField getTxtAbsorcaoArmaDeFogo() {
        return txtAbsorcaoArmaDeFogo;
    }

    public void setTxtAbsorcaoArmaDeFogo(JTextField txtAbsorcaoArmaDeFogo) {
        this.txtAbsorcaoArmaDeFogo = txtAbsorcaoArmaDeFogo;
    }

    public JTextField getTxtAparo() {
        return txtAparo;
    }

    public void setTxtAparo(JTextField txtAparo) {
        this.txtAparo = txtAparo;
    }

    public JTextField getTxtCadencia() {
        return txtCadencia;
    }

    public void setTxtCadencia(JTextField txtCadencia) {
        this.txtCadencia = txtCadencia;
    }

    public JTextField getTxtDanoAdicional() {
        return txtDanoAdicional;
    }

    public void setTxtDanoAdicional(JTextField txtDanoAdicional) {
        this.txtDanoAdicional = txtDanoAdicional;
    }

    public JTextField getTxtDescricao() {
        return txtDescricao;
    }

    public void setTxtDescricao(JTextField txtDescricao) {
        this.txtDescricao = txtDescricao;
    }

    public JTextField getTxtDestreza() {
        return txtDestreza;
    }

    public void setTxtDestreza(JTextField txtDestreza) {
        this.txtDestreza = txtDestreza;
    }

    public JTextField getTxtEsquiva() {
        return txtEsquiva;
    }

    public void setTxtEsquiva(JTextField txtEsquiva) {
        this.txtEsquiva = txtEsquiva;
    }

    public JTextField getTxtFisico() {
        return txtFisico;
    }

    public void setTxtFisico(JTextField txtFisico) {
        this.txtFisico = txtFisico;
    }

    public JTextField getTxtGolpe() {
        return txtGolpe;
    }

    public void setTxtGolpe(JTextField txtGolpe) {
        this.txtGolpe = txtGolpe;
    }

    public JTextField getTxtInteligencia() {
        return txtInteligencia;
    }

    public void setTxtInteligencia(JTextField txtInteligencia) {
        this.txtInteligencia = txtInteligencia;
    }

    public JTextField getTxtLados() {
        return txtLados;
    }

    public void setTxtLados(JTextField txtLados) {
        this.txtLados = txtLados;
    }

    public JTextField getTxtMana() {
        return txtMana;
    }

    public void setTxtMana(JTextField txtMana) {
        this.txtMana = txtMana;
    }

    public JTextField getTxtMente() {
        return txtMente;
    }

    public void setTxtMente(JTextField txtMente) {
        this.txtMente = txtMente;
    }

    public JTextField getTxtNome() {
        return txtNome;
    }

    public void setTxtNome(JTextField txtNome) {
        this.txtNome = txtNome;
    }

    public JTextField getTxtPenalidade() {
        return txtPenalidade;
    }

    public void setTxtPenalidade(JTextField txtPenalidade) {
        this.txtPenalidade = txtPenalidade;
    }

    public JTextField getTxtPercepcao() {
        return txtPercepcao;
    }

    public void setTxtPercepcao(JTextField txtPercepcao) {
        this.txtPercepcao = txtPercepcao;
    }

    public JTextField getTxtPreco() {
        return txtPreco;
    }

    public void setTxtPreco(JTextField txtPreco) {
        this.txtPreco = txtPreco;
    }

    public JComboBox getCmbRegiaoDoCorpo() {
        return cmbRegiaoDoCorpo;
    }

    public void setCmbRegiaoDoCorpo(JComboBox cmbRegiaoDoCorpo) {
        this.cmbRegiaoDoCorpo = cmbRegiaoDoCorpo;
    }

    

    public JTextField getTxtRolagem() {
        return txtRolagem;
    }

    public void setTxtRolagem(JTextField txtRolagem) {
        this.txtRolagem = txtRolagem;
    }

    public JTextField getTxtSorte() {
        return txtSorte;
    }

    public void setTxtSorte(JTextField txtSorte) {
        this.txtSorte = txtSorte;
    }

    public JTextField getTxtTiroMirado() {
        return txtTiroMirado;
    }

    public void setTxtTiroMirado(JTextField txtTiroMirado) {
        this.txtTiroMirado = txtTiroMirado;
    }

    public JTextField getTxtTiroRapido() {
        return txtTiroRapido;
    }

    public void setTxtTiroRapido(JTextField txtTiroRapido) {
        this.txtTiroRapido = txtTiroRapido;
    }

    public JTextField getTxtVontade() {
        return txtVontade;
    }

    public void setTxtVontade(JTextField txtVontade) {
        this.txtVontade = txtVontade;
    }
}
