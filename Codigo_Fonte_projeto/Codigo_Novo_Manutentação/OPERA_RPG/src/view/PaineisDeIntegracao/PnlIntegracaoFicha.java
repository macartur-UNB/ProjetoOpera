package view.PaineisDeIntegracao;

import control.Controle_Caracteristica;
import control.Controle_Ficha;
import control.Controle_Habilidade;
import control.Controle_Integracao_Ficha;
import control.Controle_Item;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.exception.ArquivoInvalidoException;
import model.exception.CaracteristicaInvalidaException;
import model.exception.DeletarInvalidoException;
import model.exception.FichaInvalidaException;
import model.exception.HabilidadeInvalidaException;
import model.exception.ItemInvalidoException;
import view.PaineisDeCadastro.PainelFuncoes;


public class PnlIntegracaoFicha extends javax.swing.JPanel {

    /**
     * Creates new form PnlIntegracaoFicha
     */
    public PnlIntegracaoFicha() {
        initComponents();
        cmbSelecionarFicha.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nenhum(a)"}));
        habilitarPnlIntegracaoDesintegracao(false);
        PainelFuncoes.habilitarCampos(this, false);
        PainelFuncoes.habilitarCampos(pnlSelecionarTipoDeFicha, true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grpTipoFicha = new javax.swing.ButtonGroup();
        grpIntegracao = new javax.swing.ButtonGroup();
        grpTipoHabilidade = new javax.swing.ButtonGroup();
        grpTipoCaracteristica = new javax.swing.ButtonGroup();
        grpTipoEquipamento = new javax.swing.ButtonGroup();
        grpTipoArma = new javax.swing.ButtonGroup();
        pnlSelecionarFicha = new javax.swing.JPanel();
        lblSelecionarFicha = new javax.swing.JLabel();
        cmbSelecionarFicha = new javax.swing.JComboBox();
        pnlSelecionarTipoDeFicha = new javax.swing.JPanel();
        rdbJogador = new javax.swing.JRadioButton();
        rdbNpc = new javax.swing.JRadioButton();
        rdbMonstro = new javax.swing.JRadioButton();
        pnlSelecionarIntegracao = new javax.swing.JPanel();
        rdbHabilidade = new javax.swing.JRadioButton();
        rdbCaracteristica = new javax.swing.JRadioButton();
        rdbEquipamento = new javax.swing.JRadioButton();
        pnlSelecionarTipoHabilidade = new javax.swing.JPanel();
        rdbHabilidadeFisica = new javax.swing.JRadioButton();
        rdbHabilidadePsiquica = new javax.swing.JRadioButton();
        rdbHabilidadeBelica = new javax.swing.JRadioButton();
        pnlSelecionarTipoCaracteristica = new javax.swing.JPanel();
        rdbCaracteristicaFisica = new javax.swing.JRadioButton();
        rdbCaracteristicaPsiquica = new javax.swing.JRadioButton();
        rdbCaracteristicaRacial = new javax.swing.JRadioButton();
        pnlSelecionarTipoEquipamento = new javax.swing.JPanel();
        rdbEquipamentoItem = new javax.swing.JRadioButton();
        rdbEquipamentoArma = new javax.swing.JRadioButton();
        rdbEquipamentoArmadura = new javax.swing.JRadioButton();
        pnlSelecionarTipoArma = new javax.swing.JPanel();
        rdbArmaADistancia = new javax.swing.JRadioButton();
        rdbArmaCorpoACorpo = new javax.swing.JRadioButton();
        pnlIntegrarAFicha = new javax.swing.JPanel();
        lblIntegrar = new javax.swing.JLabel();
        cmbSelecionarIntegracao = new javax.swing.JComboBox();
        btnIntegrar = new javax.swing.JButton();
        pnlDesintegrarAFicha = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listDesintegrar = new javax.swing.JList();
        btnDesintegrar = new javax.swing.JButton();

        pnlSelecionarFicha.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione a Ficha"));

        lblSelecionarFicha.setText("Ficha:");

        cmbSelecionarFicha.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSelecionarFicha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelecionarFichaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSelecionarFichaLayout = new javax.swing.GroupLayout(pnlSelecionarFicha);
        pnlSelecionarFicha.setLayout(pnlSelecionarFichaLayout);
        pnlSelecionarFichaLayout.setHorizontalGroup(
            pnlSelecionarFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSelecionarFicha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(cmbSelecionarFicha, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlSelecionarFichaLayout.setVerticalGroup(
            pnlSelecionarFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSelecionarFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSelecionarFicha)
                    .addComponent(cmbSelecionarFicha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSelecionarTipoDeFicha.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione o Tipo de Ficha"));

        grpTipoFicha.add(rdbJogador);
        rdbJogador.setText("Jogador");
        rdbJogador.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbJogadorActionPerformed(evt);
            }
        });

        grpTipoFicha.add(rdbNpc);
        rdbNpc.setText("NPC");
        rdbNpc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbNpcActionPerformed(evt);
            }
        });

        grpTipoFicha.add(rdbMonstro);
        rdbMonstro.setText("Monstro");
        rdbMonstro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbMonstroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSelecionarTipoDeFichaLayout = new javax.swing.GroupLayout(pnlSelecionarTipoDeFicha);
        pnlSelecionarTipoDeFicha.setLayout(pnlSelecionarTipoDeFichaLayout);
        pnlSelecionarTipoDeFichaLayout.setHorizontalGroup(
            pnlSelecionarTipoDeFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarTipoDeFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbJogador)
                .addGap(18, 18, 18)
                .addComponent(rdbNpc)
                .addGap(18, 18, 18)
                .addComponent(rdbMonstro)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSelecionarTipoDeFichaLayout.setVerticalGroup(
            pnlSelecionarTipoDeFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarTipoDeFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSelecionarTipoDeFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbJogador)
                    .addComponent(rdbNpc)
                    .addComponent(rdbMonstro))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSelecionarIntegracao.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione o que deseja Adicionar ou Remover na Ficha"));

        grpIntegracao.add(rdbHabilidade);
        rdbHabilidade.setText("Habilidade");
        rdbHabilidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbHabilidadeActionPerformed(evt);
            }
        });

        grpIntegracao.add(rdbCaracteristica);
        rdbCaracteristica.setText("Caracteristica");
        rdbCaracteristica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbCaracteristicaActionPerformed(evt);
            }
        });

        grpIntegracao.add(rdbEquipamento);
        rdbEquipamento.setText("Equipamento");
        rdbEquipamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbEquipamentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSelecionarIntegracaoLayout = new javax.swing.GroupLayout(pnlSelecionarIntegracao);
        pnlSelecionarIntegracao.setLayout(pnlSelecionarIntegracaoLayout);
        pnlSelecionarIntegracaoLayout.setHorizontalGroup(
            pnlSelecionarIntegracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarIntegracaoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbHabilidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbCaracteristica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(rdbEquipamento)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSelecionarIntegracaoLayout.setVerticalGroup(
            pnlSelecionarIntegracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarIntegracaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSelecionarIntegracaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbHabilidade)
                    .addComponent(rdbCaracteristica)
                    .addComponent(rdbEquipamento))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSelecionarTipoHabilidade.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione o Tipo de Habilidade"));

        grpTipoHabilidade.add(rdbHabilidadeFisica);
        rdbHabilidadeFisica.setText("Fisica");
        rdbHabilidadeFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbHabilidadeFisicaActionPerformed(evt);
            }
        });

        grpTipoHabilidade.add(rdbHabilidadePsiquica);
        rdbHabilidadePsiquica.setText("Psiquica");
        rdbHabilidadePsiquica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbHabilidadePsiquicaActionPerformed(evt);
            }
        });

        grpTipoHabilidade.add(rdbHabilidadeBelica);
        rdbHabilidadeBelica.setText("Belica");
        rdbHabilidadeBelica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbHabilidadeBelicaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSelecionarTipoHabilidadeLayout = new javax.swing.GroupLayout(pnlSelecionarTipoHabilidade);
        pnlSelecionarTipoHabilidade.setLayout(pnlSelecionarTipoHabilidadeLayout);
        pnlSelecionarTipoHabilidadeLayout.setHorizontalGroup(
            pnlSelecionarTipoHabilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarTipoHabilidadeLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbHabilidadeFisica)
                .addGap(18, 18, 18)
                .addComponent(rdbHabilidadePsiquica)
                .addGap(18, 18, 18)
                .addComponent(rdbHabilidadeBelica)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSelecionarTipoHabilidadeLayout.setVerticalGroup(
            pnlSelecionarTipoHabilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarTipoHabilidadeLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSelecionarTipoHabilidadeLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbHabilidadeFisica)
                    .addComponent(rdbHabilidadePsiquica)
                    .addComponent(rdbHabilidadeBelica))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSelecionarTipoCaracteristica.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione o Tipo de Caracteristica"));

        grpTipoCaracteristica.add(rdbCaracteristicaFisica);
        rdbCaracteristicaFisica.setText("Fisica");
        rdbCaracteristicaFisica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbCaracteristicaFisicaActionPerformed(evt);
            }
        });

        grpTipoCaracteristica.add(rdbCaracteristicaPsiquica);
        rdbCaracteristicaPsiquica.setText("Psiquica");
        rdbCaracteristicaPsiquica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbCaracteristicaPsiquicaActionPerformed(evt);
            }
        });

        grpTipoCaracteristica.add(rdbCaracteristicaRacial);
        rdbCaracteristicaRacial.setText("Racial");
        rdbCaracteristicaRacial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbCaracteristicaRacialActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSelecionarTipoCaracteristicaLayout = new javax.swing.GroupLayout(pnlSelecionarTipoCaracteristica);
        pnlSelecionarTipoCaracteristica.setLayout(pnlSelecionarTipoCaracteristicaLayout);
        pnlSelecionarTipoCaracteristicaLayout.setHorizontalGroup(
            pnlSelecionarTipoCaracteristicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarTipoCaracteristicaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbCaracteristicaFisica)
                .addGap(18, 18, 18)
                .addComponent(rdbCaracteristicaPsiquica)
                .addGap(18, 18, 18)
                .addComponent(rdbCaracteristicaRacial)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSelecionarTipoCaracteristicaLayout.setVerticalGroup(
            pnlSelecionarTipoCaracteristicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarTipoCaracteristicaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSelecionarTipoCaracteristicaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbCaracteristicaFisica)
                    .addComponent(rdbCaracteristicaPsiquica)
                    .addComponent(rdbCaracteristicaRacial))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlSelecionarTipoEquipamento.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecionar o Tipo de Equipamento"));

        grpTipoEquipamento.add(rdbEquipamentoItem);
        rdbEquipamentoItem.setText("Item");
        rdbEquipamentoItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbEquipamentoItemActionPerformed(evt);
            }
        });

        grpTipoEquipamento.add(rdbEquipamentoArma);
        rdbEquipamentoArma.setText("Arma");
        rdbEquipamentoArma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbEquipamentoArmaActionPerformed(evt);
            }
        });

        grpTipoEquipamento.add(rdbEquipamentoArmadura);
        rdbEquipamentoArmadura.setText("Armadura");
        rdbEquipamentoArmadura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbEquipamentoArmaduraActionPerformed(evt);
            }
        });

        pnlSelecionarTipoArma.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecionar o Tipo de Arma"));

        grpTipoArma.add(rdbArmaADistancia);
        rdbArmaADistancia.setText("Arma a Distancia");
        rdbArmaADistancia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbArmaADistanciaActionPerformed(evt);
            }
        });

        grpTipoArma.add(rdbArmaCorpoACorpo);
        rdbArmaCorpoACorpo.setText("Arma Corpo a Corpo");
        rdbArmaCorpoACorpo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdbArmaCorpoACorpoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlSelecionarTipoArmaLayout = new javax.swing.GroupLayout(pnlSelecionarTipoArma);
        pnlSelecionarTipoArma.setLayout(pnlSelecionarTipoArmaLayout);
        pnlSelecionarTipoArmaLayout.setHorizontalGroup(
            pnlSelecionarTipoArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarTipoArmaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rdbArmaADistancia)
                .addGap(18, 18, 18)
                .addComponent(rdbArmaCorpoACorpo)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlSelecionarTipoArmaLayout.setVerticalGroup(
            pnlSelecionarTipoArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarTipoArmaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSelecionarTipoArmaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbArmaADistancia)
                    .addComponent(rdbArmaCorpoACorpo))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pnlSelecionarTipoEquipamentoLayout = new javax.swing.GroupLayout(pnlSelecionarTipoEquipamento);
        pnlSelecionarTipoEquipamento.setLayout(pnlSelecionarTipoEquipamentoLayout);
        pnlSelecionarTipoEquipamentoLayout.setHorizontalGroup(
            pnlSelecionarTipoEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarTipoEquipamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSelecionarTipoEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlSelecionarTipoArma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlSelecionarTipoEquipamentoLayout.createSequentialGroup()
                        .addComponent(rdbEquipamentoItem)
                        .addGap(18, 18, 18)
                        .addComponent(rdbEquipamentoArma)
                        .addGap(18, 18, 18)
                        .addComponent(rdbEquipamentoArmadura)))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        pnlSelecionarTipoEquipamentoLayout.setVerticalGroup(
            pnlSelecionarTipoEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlSelecionarTipoEquipamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlSelecionarTipoEquipamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(rdbEquipamentoItem)
                    .addComponent(rdbEquipamentoArma)
                    .addComponent(rdbEquipamentoArmadura))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(pnlSelecionarTipoArma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlIntegrarAFicha.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione o que Integrar a Ficha"));

        lblIntegrar.setText("Integrar:");

        cmbSelecionarIntegracao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbSelecionarIntegracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbSelecionarIntegracaoActionPerformed(evt);
            }
        });

        btnIntegrar.setText("Integrar");
        btnIntegrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIntegrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlIntegrarAFichaLayout = new javax.swing.GroupLayout(pnlIntegrarAFicha);
        pnlIntegrarAFicha.setLayout(pnlIntegrarAFichaLayout);
        pnlIntegrarAFichaLayout.setHorizontalGroup(
            pnlIntegrarAFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIntegrarAFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlIntegrarAFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlIntegrarAFichaLayout.createSequentialGroup()
                        .addComponent(lblIntegrar)
                        .addGap(18, 18, 18)
                        .addComponent(cmbSelecionarIntegracao, 0, 222, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlIntegrarAFichaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnIntegrar)))
                .addContainerGap())
        );
        pnlIntegrarAFichaLayout.setVerticalGroup(
            pnlIntegrarAFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlIntegrarAFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlIntegrarAFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblIntegrar)
                    .addComponent(cmbSelecionarIntegracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnIntegrar)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlDesintegrarAFicha.setBorder(javax.swing.BorderFactory.createTitledBorder("Selecione o que Desintegrar da Ficha"));

        listDesintegrar.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        listDesintegrar.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(listDesintegrar);

        btnDesintegrar.setText("Desintegrar");
        btnDesintegrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDesintegrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlDesintegrarAFichaLayout = new javax.swing.GroupLayout(pnlDesintegrarAFicha);
        pnlDesintegrarAFicha.setLayout(pnlDesintegrarAFichaLayout);
        pnlDesintegrarAFichaLayout.setHorizontalGroup(
            pnlDesintegrarAFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDesintegrarAFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDesintegrarAFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlDesintegrarAFichaLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnDesintegrar)))
                .addContainerGap())
        );
        pnlDesintegrarAFichaLayout.setVerticalGroup(
            pnlDesintegrarAFichaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlDesintegrarAFichaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDesintegrar)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(pnlSelecionarTipoHabilidade, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlSelecionarTipoDeFicha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlSelecionarFicha, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlSelecionarIntegracao, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlSelecionarTipoCaracteristica, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlSelecionarTipoEquipamento, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pnlIntegrarAFicha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlDesintegrarAFicha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlSelecionarTipoDeFicha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlSelecionarFicha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(pnlSelecionarIntegracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlSelecionarTipoHabilidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlSelecionarTipoCaracteristica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(pnlIntegrarAFicha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(pnlDesintegrarAFicha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlSelecionarTipoEquipamento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(35, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void rdbJogadorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbJogadorActionPerformed
        PainelFuncoes.habilitarCampos(this, false);
        PainelFuncoes.limparTodosOsCampos(this);
        limparGrp();
        PainelFuncoes.habilitarCampos(pnlSelecionarTipoDeFicha, true);
        PainelFuncoes.habilitarCampos(pnlSelecionarFicha, true);
        carregarCmbSelecionarFicha("Jogador");
    }//GEN-LAST:event_rdbJogadorActionPerformed

    private void rdbNpcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbNpcActionPerformed
        PainelFuncoes.habilitarCampos(this, false);
        PainelFuncoes.limparTodosOsCampos(this);
        limparGrp();
        PainelFuncoes.habilitarCampos(pnlSelecionarTipoDeFicha, true);
        PainelFuncoes.habilitarCampos(pnlSelecionarFicha, true);
        carregarCmbSelecionarFicha("NPC");
    }//GEN-LAST:event_rdbNpcActionPerformed

    private void rdbMonstroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbMonstroActionPerformed
        PainelFuncoes.habilitarCampos(this, false);
        PainelFuncoes.limparTodosOsCampos(this);
        limparGrp();
        PainelFuncoes.habilitarCampos(pnlSelecionarTipoDeFicha, true);
        PainelFuncoes.habilitarCampos(pnlSelecionarFicha, true);
        carregarCmbSelecionarFicha("Monstro");
    }//GEN-LAST:event_rdbMonstroActionPerformed

    private void cmbSelecionarFichaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelecionarFichaActionPerformed
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarIntegracao);
        habilitarPnlIntegracaoDesintegracao(false);
        if(!cmbSelecionarFicha.getSelectedItem().equals("Nenhum(a)")){
            PainelFuncoes.habilitarCampos(pnlSelecionarIntegracao, true);
        }else{
            PainelFuncoes.habilitarCampos(pnlSelecionarIntegracao, false);
            PainelFuncoes.limparTodosOsCampos(pnlSelecionarIntegracao);
            
            PainelFuncoes.habilitarCampos(pnlSelecionarTipoHabilidade, false);
            PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoHabilidade);
            
            PainelFuncoes.habilitarCampos(pnlSelecionarTipoCaracteristica, false);
            PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoCaracteristica);
            
            PainelFuncoes.habilitarCampos(pnlSelecionarTipoEquipamento, false);            
            PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoEquipamento);
            
            PainelFuncoes.habilitarCampos(pnlSelecionarTipoArma, false);
            PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoArma);
            
            limparGrp();
        }
        
    }//GEN-LAST:event_cmbSelecionarFichaActionPerformed

    private void rdbHabilidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbHabilidadeActionPerformed
        PainelFuncoes.habilitarCampos(pnlSelecionarTipoHabilidade, true);

        PainelFuncoes.habilitarCampos(pnlSelecionarTipoCaracteristica, false);
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoCaracteristica);
        grpTipoCaracteristica.clearSelection();

        PainelFuncoes.habilitarCampos(pnlSelecionarTipoEquipamento, false);            
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoEquipamento);
        grpTipoEquipamento.clearSelection();

        PainelFuncoes.habilitarCampos(pnlSelecionarTipoArma, false);
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoArma);
        grpTipoArma.clearSelection();
        
        grpTipoHabilidade.clearSelection();
        
        habilitarPnlIntegracaoDesintegracao(false);
    }//GEN-LAST:event_rdbHabilidadeActionPerformed

    private void rdbCaracteristicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbCaracteristicaActionPerformed
        PainelFuncoes.habilitarCampos(pnlSelecionarTipoCaracteristica, true);
        
        PainelFuncoes.habilitarCampos(pnlSelecionarTipoHabilidade, false);
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoHabilidade);
        grpTipoHabilidade.clearSelection();

        PainelFuncoes.habilitarCampos(pnlSelecionarTipoEquipamento, false);            
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoEquipamento);
        grpTipoEquipamento.clearSelection();

        PainelFuncoes.habilitarCampos(pnlSelecionarTipoArma, false);
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoArma);
        grpTipoArma.clearSelection();
        
        grpTipoCaracteristica.clearSelection();
        
        habilitarPnlIntegracaoDesintegracao(false);
    }//GEN-LAST:event_rdbCaracteristicaActionPerformed

    private void rdbEquipamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbEquipamentoActionPerformed
        PainelFuncoes.habilitarCampos(pnlSelecionarTipoEquipamento, true);
        
        PainelFuncoes.habilitarCampos(pnlSelecionarTipoHabilidade, false);
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoHabilidade);
        grpTipoHabilidade.clearSelection();

        PainelFuncoes.habilitarCampos(pnlSelecionarTipoCaracteristica, false);
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoCaracteristica);
        grpTipoCaracteristica.clearSelection();

        PainelFuncoes.habilitarCampos(pnlSelecionarTipoArma, false);
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoArma);
        grpTipoArma.clearSelection();
        
        grpTipoEquipamento.clearSelection();
        
        habilitarPnlIntegracaoDesintegracao(false);
    }//GEN-LAST:event_rdbEquipamentoActionPerformed

    private void rdbHabilidadeFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbHabilidadeFisicaActionPerformed
        try{
            carregarCmbSelecionarIntegracao("Habilidade Fisica");
            carregarListDesintegrar("Habilidade Fisica");
            habilitarPnlIntegracaoDesintegracao(true);
        } catch(ArquivoInvalidoException | ClassNotFoundException | FichaInvalidaException | IOException e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),"Erro",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rdbHabilidadeFisicaActionPerformed

    private void rdbHabilidadePsiquicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbHabilidadePsiquicaActionPerformed
        try{
            carregarCmbSelecionarIntegracao("Habilidade Psiquica");
            carregarListDesintegrar("Habilidade Psiquica");
            habilitarPnlIntegracaoDesintegracao(true);
        } catch(ArquivoInvalidoException | ClassNotFoundException |
                FichaInvalidaException | IOException e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),
                                              "Erro",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rdbHabilidadePsiquicaActionPerformed

    private void rdbHabilidadeBelicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbHabilidadeBelicaActionPerformed
        try{
            carregarCmbSelecionarIntegracao("Habilidade Belica");
            carregarListDesintegrar("Habilidade Belica");
            habilitarPnlIntegracaoDesintegracao(true);
        } catch(ArquivoInvalidoException | ClassNotFoundException |
                FichaInvalidaException | IOException e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),
                                              "Erro",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rdbHabilidadeBelicaActionPerformed

    private void rdbCaracteristicaFisicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbCaracteristicaFisicaActionPerformed
        try{
            carregarCmbSelecionarIntegracao("Caracteristica Fisica");
            carregarListDesintegrar("Caracteristica Fisica");
            habilitarPnlIntegracaoDesintegracao(true);
        } catch(ArquivoInvalidoException | ClassNotFoundException |
                                        FichaInvalidaException | IOException e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),
                                              "Erro",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rdbCaracteristicaFisicaActionPerformed

    private void rdbCaracteristicaPsiquicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbCaracteristicaPsiquicaActionPerformed
        try{
            carregarCmbSelecionarIntegracao("Caracteristica Psiquica");
            carregarListDesintegrar("Caracteristica Psiquica");
            habilitarPnlIntegracaoDesintegracao(true);
        } catch(ArquivoInvalidoException | ClassNotFoundException |
                FichaInvalidaException | IOException e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),
                                              "Erro",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rdbCaracteristicaPsiquicaActionPerformed

    private void rdbCaracteristicaRacialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbCaracteristicaRacialActionPerformed
        try{
            carregarCmbSelecionarIntegracao("Caracteristica Racial");
            carregarListDesintegrar("Caracteristica Racial");
            habilitarPnlIntegracaoDesintegracao(true);
        } catch(ArquivoInvalidoException | ClassNotFoundException |
                FichaInvalidaException | IOException e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),
                                              "Erro",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rdbCaracteristicaRacialActionPerformed

    private void rdbEquipamentoItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbEquipamentoItemActionPerformed
        PainelFuncoes.habilitarCampos(pnlSelecionarTipoArma, false);
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoArma);
        grpTipoArma.clearSelection();
        try{
            carregarCmbSelecionarIntegracao("Item Generico");
            carregarListDesintegrar("Item Generico");
            habilitarPnlIntegracaoDesintegracao(true);
        } catch(Exception e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),
                                              "Erro",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rdbEquipamentoItemActionPerformed

    private void rdbEquipamentoArmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbEquipamentoArmaActionPerformed
        PainelFuncoes.habilitarCampos(pnlSelecionarTipoArma, true);
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoArma);
        
        grpTipoArma.clearSelection();
        
        habilitarPnlIntegracaoDesintegracao(false);
    }//GEN-LAST:event_rdbEquipamentoArmaActionPerformed

    private void rdbEquipamentoArmaduraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbEquipamentoArmaduraActionPerformed
        PainelFuncoes.habilitarCampos(pnlSelecionarTipoArma, false);
        PainelFuncoes.limparTodosOsCampos(pnlSelecionarTipoArma);
        grpTipoArma.clearSelection();
        try{
            carregarCmbSelecionarIntegracao("Armadura");
            carregarListDesintegrar("Armadura");
            habilitarPnlIntegracaoDesintegracao(true);
        } catch(Exception e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),
                                              "Erro",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rdbEquipamentoArmaduraActionPerformed

    private void rdbArmaADistanciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbArmaADistanciaActionPerformed
        try{
            carregarCmbSelecionarIntegracao("Arma A Distancia");
            carregarListDesintegrar("Arma A Distancia");
            habilitarPnlIntegracaoDesintegracao(true);
        } catch(Exception e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),
                                              "Erro",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rdbArmaADistanciaActionPerformed

    private void rdbArmaCorpoACorpoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdbArmaCorpoACorpoActionPerformed
        try{
            carregarCmbSelecionarIntegracao("Arma Corpo A Corpo");
            carregarListDesintegrar("Arma Corpo A Corpo");
            habilitarPnlIntegracaoDesintegracao(true);
        } catch(Exception e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),
                                              "Erro",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_rdbArmaCorpoACorpoActionPerformed

    private void cmbSelecionarIntegracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbSelecionarIntegracaoActionPerformed
        if(!cmbSelecionarIntegracao.getSelectedItem().equals("Nenhum(a)")){
            btnIntegrar.setEnabled(true);
        }else{
            btnIntegrar.setEnabled(false);
        }
    }//GEN-LAST:event_cmbSelecionarIntegracaoActionPerformed

    private void btnIntegrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIntegrarActionPerformed
        try{
            String personagem = cmbSelecionarFicha.getSelectedItem().toString();
            
            String itemSelecionado = cmbSelecionarIntegracao.getSelectedItem().toString();
            
            if(rdbHabilidadeFisica.isSelected()){
                Controle_Integracao_Ficha.colocarHabilidade(personagem, itemSelecionado);
                carregarListDesintegrar("Habilidade Fisica");
            }
            if(rdbHabilidadePsiquica.isSelected()){
                Controle_Integracao_Ficha.colocarHabilidade(personagem, itemSelecionado);
                carregarListDesintegrar("Habilidade Psiquica");
            }
            if(rdbHabilidadeBelica.isSelected()){
                Controle_Integracao_Ficha.colocarHabilidade(personagem, itemSelecionado);
                carregarListDesintegrar("Habilidade Belica");
            }
            
            if(rdbCaracteristicaFisica.isSelected()){
                Controle_Integracao_Ficha.colocarCaracteristica(personagem, itemSelecionado);
                carregarListDesintegrar("Caracteristica Fisica");
            }
            if(rdbCaracteristicaPsiquica.isSelected()){
                Controle_Integracao_Ficha.colocarCaracteristica(personagem, itemSelecionado);
                carregarListDesintegrar("Caracteristica Psiquica");
            }
            if(rdbCaracteristicaRacial.isSelected()){
                Controle_Integracao_Ficha.colocarCaracteristica(personagem, itemSelecionado);
                carregarListDesintegrar("Caracteristica Racial");
            }
            
            if(rdbEquipamentoItem.isSelected()){
                Controle_Integracao_Ficha.colocarItemGenerico(personagem, itemSelecionado);
                carregarListDesintegrar("Item Generico");
            }
            if(rdbArmaADistancia.isSelected()){
                Controle_Integracao_Ficha.colocarArma_A_Distancia(personagem, itemSelecionado);
                carregarListDesintegrar("Arma A Distancia");
            }
            if(rdbArmaCorpoACorpo.isSelected()){
                Controle_Integracao_Ficha.colocarArma_Corpo_A_Corpo(personagem, itemSelecionado);
                carregarListDesintegrar("Arma Corpo A Corpo");
            }
            if(rdbEquipamentoArmadura.isSelected()){
                Controle_Integracao_Ficha.colocarArmadura(personagem, itemSelecionado);
                carregarListDesintegrar("Armadura");
            }
            
            
            JOptionPane.showMessageDialog(null,"Integrar: " + itemSelecionado
                                        +"\nRealizado com Sucesso!","Concluido",
                                               JOptionPane.INFORMATION_MESSAGE);
            
        } catch(CaracteristicaInvalidaException | ArquivoInvalidoException | 
                ClassNotFoundException | FichaInvalidaException | IOException | 
                DeletarInvalidoException | HabilidadeInvalidaException | 
                                                       ItemInvalidoException e){
            JOptionPane.showMessageDialog(null,"ERROR: " + 
                               e.getMessage(),"Erro",JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnIntegrarActionPerformed

    private void btnDesintegrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDesintegrarActionPerformed
        try{
            String personagem = cmbSelecionarFicha.getSelectedItem().toString();            

            String itemSelecionado = listDesintegrar.getSelectedValue().toString();
            if(!itemSelecionado.equals("Nenhum(a)")){
                if(rdbHabilidadeFisica.isSelected()){
                    Controle_Integracao_Ficha.removerHabilidade(personagem, itemSelecionado);
                    carregarListDesintegrar("Habilidade Fisica");
                }
                if(rdbHabilidadePsiquica.isSelected()){
                    Controle_Integracao_Ficha.removerHabilidade(personagem, itemSelecionado);
                    carregarListDesintegrar("Habilidade Psiquica");
                }
                if(rdbHabilidadeBelica.isSelected()){
                    Controle_Integracao_Ficha.removerHabilidade(personagem, itemSelecionado);
                    carregarListDesintegrar("Habilidade Belica");
                }
                
                if(rdbCaracteristicaFisica.isSelected()){
                    Controle_Integracao_Ficha.removerCaracteristica(personagem, itemSelecionado);
                    carregarListDesintegrar("Caracteristica Fisica");
                }
                if(rdbCaracteristicaPsiquica.isSelected()){
                    Controle_Integracao_Ficha.removerCaracteristica(personagem, itemSelecionado);
                    carregarListDesintegrar("Caracteristica Psiquica");
                }
                if(rdbCaracteristicaRacial.isSelected()){
                    Controle_Integracao_Ficha.removerCaracteristica(personagem, itemSelecionado);
                    carregarListDesintegrar("Caracteristica Racial");
                }
                
                if(rdbEquipamentoItem.isSelected()){
                    Controle_Integracao_Ficha.removerItemGenerico(personagem, itemSelecionado);
                    carregarListDesintegrar("Item Generico");
                }
                if(rdbArmaADistancia.isSelected()){
                    Controle_Integracao_Ficha.removerArma_A_Distancia(personagem, itemSelecionado);
                    carregarListDesintegrar("Arma A Distancia");
                }
                if(rdbArmaCorpoACorpo.isSelected()){
                    Controle_Integracao_Ficha.removerArma_Corpo_A_Corpo(personagem, itemSelecionado);
                    carregarListDesintegrar("Arma Corpo A Corpo");
                }
                if(rdbEquipamentoArmadura.isSelected()){
                    Controle_Integracao_Ficha.removerArmadura(personagem, itemSelecionado);
                    carregarListDesintegrar("Armadura");
                }
                
                
                JOptionPane.showMessageDialog(null,"Desintegrar: " + itemSelecionado
                                              +"\nRealizado com Sucesso!","Concluido",
                                               JOptionPane.INFORMATION_MESSAGE);
            
            }else{
                JOptionPane.showMessageDialog(null,"ERROR: "
                           + "Selecione uma Opcao Valida para ser Desintegrada",
                                              "Erro",JOptionPane.ERROR_MESSAGE);
            }
        } catch(CaracteristicaInvalidaException | DeletarInvalidoException | 
                FichaInvalidaException | ArquivoInvalidoException | 
                ClassNotFoundException | HabilidadeInvalidaException | 
                     HeadlessException | IOException | ItemInvalidoException e){
            JOptionPane.showMessageDialog(null,"ERROR: " + e.getMessage(),"Erro",JOptionPane.ERROR_MESSAGE);
        } catch(NullPointerException e){
            JOptionPane.showMessageDialog(null,"ERROR: " 
                                      +  "Nao foi Selecionado uma Opcao","Erro",
                                                     JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnDesintegrarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDesintegrar;
    private javax.swing.JButton btnIntegrar;
    private javax.swing.JComboBox cmbSelecionarFicha;
    private javax.swing.JComboBox cmbSelecionarIntegracao;
    private javax.swing.ButtonGroup grpIntegracao;
    private javax.swing.ButtonGroup grpTipoArma;
    private javax.swing.ButtonGroup grpTipoCaracteristica;
    private javax.swing.ButtonGroup grpTipoEquipamento;
    private javax.swing.ButtonGroup grpTipoFicha;
    private javax.swing.ButtonGroup grpTipoHabilidade;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblIntegrar;
    private javax.swing.JLabel lblSelecionarFicha;
    private javax.swing.JList listDesintegrar;
    private javax.swing.JPanel pnlDesintegrarAFicha;
    private javax.swing.JPanel pnlIntegrarAFicha;
    private javax.swing.JPanel pnlSelecionarFicha;
    private javax.swing.JPanel pnlSelecionarIntegracao;
    private javax.swing.JPanel pnlSelecionarTipoArma;
    private javax.swing.JPanel pnlSelecionarTipoCaracteristica;
    private javax.swing.JPanel pnlSelecionarTipoDeFicha;
    private javax.swing.JPanel pnlSelecionarTipoEquipamento;
    private javax.swing.JPanel pnlSelecionarTipoHabilidade;
    private javax.swing.JRadioButton rdbArmaADistancia;
    private javax.swing.JRadioButton rdbArmaCorpoACorpo;
    private javax.swing.JRadioButton rdbCaracteristica;
    private javax.swing.JRadioButton rdbCaracteristicaFisica;
    private javax.swing.JRadioButton rdbCaracteristicaPsiquica;
    private javax.swing.JRadioButton rdbCaracteristicaRacial;
    private javax.swing.JRadioButton rdbEquipamento;
    private javax.swing.JRadioButton rdbEquipamentoArma;
    private javax.swing.JRadioButton rdbEquipamentoArmadura;
    private javax.swing.JRadioButton rdbEquipamentoItem;
    private javax.swing.JRadioButton rdbHabilidade;
    private javax.swing.JRadioButton rdbHabilidadeBelica;
    private javax.swing.JRadioButton rdbHabilidadeFisica;
    private javax.swing.JRadioButton rdbHabilidadePsiquica;
    private javax.swing.JRadioButton rdbJogador;
    private javax.swing.JRadioButton rdbMonstro;
    private javax.swing.JRadioButton rdbNpc;
    // End of variables declaration//GEN-END:variables

    private void limparGrp(){
        grpIntegracao.clearSelection();
        grpTipoHabilidade.clearSelection();
        grpTipoCaracteristica.clearSelection();
        grpTipoEquipamento.clearSelection();
        grpTipoArma.clearSelection();
    }
    
    private void habilitarPnlIntegracaoDesintegracao(boolean habilitar){
        PainelFuncoes.habilitarCampos(pnlIntegrarAFicha, habilitar);
        PainelFuncoes.habilitarCampos(pnlDesintegrarAFicha, habilitar);
        if(!habilitar){
            PainelFuncoes.limparTodosOsCampos(pnlIntegrarAFicha);
            PainelFuncoes.limparTodosOsCampos(pnlDesintegrarAFicha);
            cmbSelecionarIntegracao.setModel(
             new javax.swing.DefaultComboBoxModel(new String[] { "Nenhum(a)"}));
            listDesintegrar.setModel(new DefaultListModel());
        }
        
        btnIntegrar.setEnabled(false);        
    }
    
    private void carregarListDesintegrar(String carregar) throws FileNotFoundException, ClassNotFoundException, IOException, ArquivoInvalidoException, FichaInvalidaException{
        listDesintegrar.setModel(new DefaultListModel());
        String lista[] = null;
        
        String personagem = cmbSelecionarFicha.getSelectedItem().toString();
        
        DefaultListModel modelList = new DefaultListModel();
        modelList.addElement("Nenhum(a)");
        listDesintegrar.setModel(modelList);
        switch(carregar){
            case "Habilidade Fisica":
                lista = Controle_Integracao_Ficha.listarHabilidadesFisicas(personagem);
                break;
            case "Habilidade Psiquica":
                lista = Controle_Integracao_Ficha.listarHabilidadesPsiquicas(personagem);
                break;
            case "Habilidade Belica":
                lista = Controle_Integracao_Ficha.listarHabilidadesBelicas(personagem);
                break;
                
            case "Caracteristica Fisica":
                lista = Controle_Integracao_Ficha.listarCaracteristicasFisicas(personagem);
                break;
            case "Caracteristica Psiquica":
                lista = Controle_Integracao_Ficha.listarCaracteristicasPsiquicas(personagem);
                break;
            case "Caracteristica Racial":
                lista = Controle_Integracao_Ficha.listarCaracteristicasRaciais(personagem);
                break;
                
            case "Item Generico":
                lista = Controle_Integracao_Ficha.listarItensGenericos(personagem);
                break;
            case "Arma A Distancia":
                lista = Controle_Integracao_Ficha.listarArma_A_Distancia(personagem);
                break;
            case "Arma Corpo A Corpo":
                lista = Controle_Integracao_Ficha.listarArma_Corpo_A_Corpo(personagem);
                break;
            case "Armadura":
                lista = Controle_Integracao_Ficha.listarArmadura(personagem);
                break;
        }
        
        if(lista != null){
            if(lista.length > 0){
                
                for(int i = 0; i < lista.length; i++){
                    modelList.addElement(lista[i]);
                }
                
                listDesintegrar.setModel(modelList);
                
            }
        }
        
    }
    
    private void carregarCmbSelecionarIntegracao(String carregar){
        
        cmbSelecionarIntegracao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nenhum(a)"}));
        
        String lista[] = null;
        
        switch(carregar){
            case "Habilidade Fisica":
                lista = Controle_Habilidade.listarHabilidadesFisicas();
                break;
            case "Habilidade Psiquica":
                lista = Controle_Habilidade.listarHabilidadesPsiquicas();
                break;
            case "Habilidade Belica":
                lista = Controle_Habilidade.listarHabilidadesBelicas();
                break;
            
            case "Caracteristica Fisica":
                lista = Controle_Caracteristica.listarCaracteristicasFisicas();
                break;
            case "Caracteristica Psiquica":
                lista = Controle_Caracteristica.listarCaracteristicasPsiquicas();
                break;
            case "Caracteristica Racial":
                lista = Controle_Caracteristica.listarCaracteristicasRaciais();
                break;
                
            case "Item Generico":
                lista = Controle_Item.listarItemGenerico();
                break;
            case "Arma A Distancia":
                lista = Controle_Item.listarItemArmaADistancia();
                break;
            case "Arma Corpo A Corpo":
                lista = Controle_Item.listarItemArmaCorpoACorpo();
                break;
            case "Armadura":
                lista = Controle_Item.listarItemArmadura();
                break;
        }
        
        if(lista != null){
            if(lista.length > 0){
                for(int i = 0; i < lista.length; i++){
                    cmbSelecionarIntegracao.addItem(lista[i]);
                }
            }
        }
    }
    
    private void carregarCmbSelecionarFicha(String carregar){
        
        cmbSelecionarFicha.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Nenhum(a)"}));
        
        String lista[] = null;
        
        switch(carregar){
            case "Jogador":
                lista = Controle_Ficha.listarFichasJogador();
                break;
            
            case "NPC":
                lista = Controle_Ficha.listarFichasNPC();
                break;
                
            case "Monstro":
                lista = Controle_Ficha.listarFichasMonstro();
                break;
        }
        
        if(lista != null){
            if(lista.length > 0){
                for(int i = 0; i < lista.length; i++){
                    cmbSelecionarFicha.addItem(lista[i]);
                }
            }
        }
    }
}
